# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def applications_application_list(client,
                                  orderby=None,
                                  select=None,
                                  expand=None):
    return client.list_application(orderby=orderby,
                                   select=select,
                                   expand=expand)


def applications_application_create(client,
                                    id_=None,
                                    deleted_date_time=None,
                                    add_ins=None,
                                    app_id=None,
                                    application_template_id=None,
                                    app_roles=None,
                                    created_date_time=None,
                                    description=None,
                                    display_name=None,
                                    group_membership_claims=None,
                                    identifier_uris=None,
                                    info=None,
                                    is_device_only_auth_supported=None,
                                    is_fallback_public_client=None,
                                    key_credentials=None,
                                    logo=None,
                                    notes=None,
                                    oauth2_require_post_response=None,
                                    parental_control_settings=None,
                                    password_credentials=None,
                                    public_client=None,
                                    publisher_domain=None,
                                    required_resource_access=None,
                                    sign_in_audience=None,
                                    tags=None,
                                    token_encryption_key_id=None,
                                    created_on_behalf_of=None,
                                    extension_properties=None,
                                    home_realm_discovery_policies=None,
                                    owners=None,
                                    token_issuance_policies=None,
                                    token_lifetime_policies=None,
                                    home_page_url=None,
                                    implicit_grant_settings=None,
                                    logout_url=None,
                                    redirect_uris=None,
                                    access_token=None,
                                    id_token=None,
                                    saml2_token=None,
                                    accept_mapped_claims=None,
                                    known_client_applications=None,
                                    oauth2_permission_scopes=None,
                                    pre_authorized_applications=None,
                                    requested_access_token_version=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['add_ins'] = add_ins
    body['app_id'] = app_id
    body['application_template_id'] = application_template_id
    body['app_roles'] = app_roles
    body['created_date_time'] = created_date_time
    body['description'] = description
    body['display_name'] = display_name
    body['group_membership_claims'] = group_membership_claims
    body['identifier_uris'] = identifier_uris
    body['info'] = info
    body['is_device_only_auth_supported'] = is_device_only_auth_supported
    body['is_fallback_public_client'] = is_fallback_public_client
    body['key_credentials'] = key_credentials
    body['logo'] = logo
    body['notes'] = notes
    body['oauth2_require_post_response'] = oauth2_require_post_response
    body['parental_control_settings'] = parental_control_settings
    body['password_credentials'] = password_credentials
    body['public_client'] = public_client
    body['publisher_domain'] = publisher_domain
    body['required_resource_access'] = required_resource_access
    body['sign_in_audience'] = sign_in_audience
    body['tags'] = tags
    body['token_encryption_key_id'] = token_encryption_key_id
    body['created_on_behalf_of'] = created_on_behalf_of
    body['extension_properties'] = extension_properties
    body['home_realm_discovery_policies'] = home_realm_discovery_policies
    body['owners'] = owners
    body['token_issuance_policies'] = token_issuance_policies
    body['token_lifetime_policies'] = token_lifetime_policies
    body['web'] = {}
    body['web']['home_page_url'] = home_page_url
    body['web']['implicit_grant_settings'] = implicit_grant_settings
    body['web']['logout_url'] = logout_url
    body['web']['redirect_uris'] = redirect_uris
    body['optional_claims'] = {}
    body['optional_claims']['access_token'] = access_token
    body['optional_claims']['id_token'] = id_token
    body['optional_claims']['saml2_token'] = saml2_token
    body['api'] = {}
    body['api']['accept_mapped_claims'] = accept_mapped_claims
    body['api']['known_client_applications'] = known_client_applications
    body['api']['oauth2_permission_scopes'] = oauth2_permission_scopes
    body['api']['pre_authorized_applications'] = pre_authorized_applications
    body['api']['requested_access_token_version'] = requested_access_token_version
    return client.create_application(body=body)


def applications_application_update(client,
                                    application_id,
                                    id_=None,
                                    deleted_date_time=None,
                                    add_ins=None,
                                    app_id=None,
                                    application_template_id=None,
                                    app_roles=None,
                                    created_date_time=None,
                                    description=None,
                                    display_name=None,
                                    group_membership_claims=None,
                                    identifier_uris=None,
                                    info=None,
                                    is_device_only_auth_supported=None,
                                    is_fallback_public_client=None,
                                    key_credentials=None,
                                    logo=None,
                                    notes=None,
                                    oauth2_require_post_response=None,
                                    parental_control_settings=None,
                                    password_credentials=None,
                                    public_client=None,
                                    publisher_domain=None,
                                    required_resource_access=None,
                                    sign_in_audience=None,
                                    tags=None,
                                    token_encryption_key_id=None,
                                    created_on_behalf_of=None,
                                    extension_properties=None,
                                    home_realm_discovery_policies=None,
                                    owners=None,
                                    token_issuance_policies=None,
                                    token_lifetime_policies=None,
                                    home_page_url=None,
                                    implicit_grant_settings=None,
                                    logout_url=None,
                                    redirect_uris=None,
                                    access_token=None,
                                    id_token=None,
                                    saml2_token=None,
                                    accept_mapped_claims=None,
                                    known_client_applications=None,
                                    oauth2_permission_scopes=None,
                                    pre_authorized_applications=None,
                                    requested_access_token_version=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['add_ins'] = add_ins
    body['app_id'] = app_id
    body['application_template_id'] = application_template_id
    body['app_roles'] = app_roles
    body['created_date_time'] = created_date_time
    body['description'] = description
    body['display_name'] = display_name
    body['group_membership_claims'] = group_membership_claims
    body['identifier_uris'] = identifier_uris
    body['info'] = info
    body['is_device_only_auth_supported'] = is_device_only_auth_supported
    body['is_fallback_public_client'] = is_fallback_public_client
    body['key_credentials'] = key_credentials
    body['logo'] = logo
    body['notes'] = notes
    body['oauth2_require_post_response'] = oauth2_require_post_response
    body['parental_control_settings'] = parental_control_settings
    body['password_credentials'] = password_credentials
    body['public_client'] = public_client
    body['publisher_domain'] = publisher_domain
    body['required_resource_access'] = required_resource_access
    body['sign_in_audience'] = sign_in_audience
    body['tags'] = tags
    body['token_encryption_key_id'] = token_encryption_key_id
    body['created_on_behalf_of'] = created_on_behalf_of
    body['extension_properties'] = extension_properties
    body['home_realm_discovery_policies'] = home_realm_discovery_policies
    body['owners'] = owners
    body['token_issuance_policies'] = token_issuance_policies
    body['token_lifetime_policies'] = token_lifetime_policies
    body['web'] = {}
    body['web']['home_page_url'] = home_page_url
    body['web']['implicit_grant_settings'] = implicit_grant_settings
    body['web']['logout_url'] = logout_url
    body['web']['redirect_uris'] = redirect_uris
    body['optional_claims'] = {}
    body['optional_claims']['access_token'] = access_token
    body['optional_claims']['id_token'] = id_token
    body['optional_claims']['saml2_token'] = saml2_token
    body['api'] = {}
    body['api']['accept_mapped_claims'] = accept_mapped_claims
    body['api']['known_client_applications'] = known_client_applications
    body['api']['oauth2_permission_scopes'] = oauth2_permission_scopes
    body['api']['pre_authorized_applications'] = pre_authorized_applications
    body['api']['requested_access_token_version'] = requested_access_token_version
    return client.update_application(application_id=application_id,
                                     body=body)


def applications_application_delete_application(client,
                                                application_id,
                                                if_match=None):
    return client.delete_application(application_id=application_id,
                                     if_match=if_match)


def applications_application_set_logo(client,
                                      application_id,
                                      data):
    return client.set_logo(application_id=application_id,
                           data=data)


def applications_application_show_application(client,
                                              application_id,
                                              select=None,
                                              expand=None):
    return client.get_application(application_id=application_id,
                                  select=select,
                                  expand=expand)


def applications_application_show_logo(client,
                                       application_id):
    return client.get_logo(application_id=application_id)


def applications_application_add_key(client,
                                     application_id,
                                     key_credential=None,
                                     password_credential=None,
                                     proof=None):
    body = {}
    body['key_credential'] = key_credential
    body['password_credential'] = password_credential
    body['proof'] = proof
    return client.add_key(application_id=application_id,
                          body=body)


def applications_application_add_password(client,
                                          application_id,
                                          password_credential=None):
    body = {}
    body['password_credential'] = password_credential
    return client.add_password(application_id=application_id,
                               body=body)


def applications_application_check_member_group(client,
                                                application_id,
                                                group_ids=None):
    body = {}
    body['group_ids'] = group_ids
    return client.check_member_groups(application_id=application_id,
                                      body=body)


def applications_application_check_member_object(client,
                                                 application_id,
                                                 ids=None):
    body = {}
    body['ids'] = ids
    return client.check_member_objects(application_id=application_id,
                                       body=body)


def applications_application_create_extension_property(client,
                                                       application_id,
                                                       id_=None,
                                                       deleted_date_time=None,
                                                       app_display_name=None,
                                                       data_type=None,
                                                       is_synced_from_on_premises=None,
                                                       name=None,
                                                       target_objects=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_display_name'] = app_display_name
    body['data_type'] = data_type
    body['is_synced_from_on_premises'] = is_synced_from_on_premises
    body['name'] = name
    body['target_objects'] = target_objects
    return client.create_extension_properties(application_id=application_id,
                                              body=body)


def applications_application_create_ref_home_realm_discovery_policy(client,
                                                                    application_id,
                                                                    body):
    return client.create_ref_home_realm_discovery_policies(application_id=application_id,
                                                           body=body)


def applications_application_create_ref_owner(client,
                                              application_id,
                                              body):
    return client.create_ref_owners(application_id=application_id,
                                    body=body)


def applications_application_create_ref_token_issuance_policy(client,
                                                              application_id,
                                                              body):
    return client.create_ref_token_issuance_policies(application_id=application_id,
                                                     body=body)


def applications_application_create_ref_token_lifetime_policy(client,
                                                              application_id,
                                                              body):
    return client.create_ref_token_lifetime_policies(application_id=application_id,
                                                     body=body)


def applications_application_delete_extension_property(client,
                                                       application_id,
                                                       extension_property_id,
                                                       if_match=None):
    return client.delete_extension_properties(application_id=application_id,
                                              extension_property_id=extension_property_id,
                                              if_match=if_match)


def applications_application_delete_ref_created_on_behalf_of(client,
                                                             application_id,
                                                             if_match=None):
    return client.delete_ref_created_on_behalf_of(application_id=application_id,
                                                  if_match=if_match)


def applications_application_delta(client):
    return client.delta()


def applications_application_get_available_extension_property(client,
                                                              is_synced_from_on_premises=None):
    if is_synced_from_on_premises is None:
        is_synced_from_on_premises = False
    body = {}
    body['is_synced_from_on_premises'] = False if is_synced_from_on_premises is None else is_synced_from_on_premises
    return client.get_available_extension_properties(body=body)


def applications_application_get_by_id(client,
                                       ids=None,
                                       types=None):
    body = {}
    body['ids'] = ids
    body['types'] = types
    return client.get_by_ids(body=body)


def applications_application_get_member_group(client,
                                              application_id,
                                              security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    body = {}
    body['security_enabled_only'] = False if security_enabled_only is None else security_enabled_only
    return client.get_member_groups(application_id=application_id,
                                    body=body)


def applications_application_get_member_object(client,
                                               application_id,
                                               security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    body = {}
    body['security_enabled_only'] = False if security_enabled_only is None else security_enabled_only
    return client.get_member_objects(application_id=application_id,
                                     body=body)


def applications_application_list_extension_property(client,
                                                     application_id,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_extension_properties(application_id=application_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_application_list_home_realm_discovery_policy(client,
                                                              application_id,
                                                              orderby=None,
                                                              select=None,
                                                              expand=None):
    return client.list_home_realm_discovery_policies(application_id=application_id,
                                                     orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def applications_application_list_owner(client,
                                        application_id,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_owners(application_id=application_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def applications_application_list_ref_home_realm_discovery_policy(client,
                                                                  application_id,
                                                                  orderby=None):
    return client.list_ref_home_realm_discovery_policies(application_id=application_id,
                                                         orderby=orderby)


def applications_application_list_ref_owner(client,
                                            application_id,
                                            orderby=None):
    return client.list_ref_owners(application_id=application_id,
                                  orderby=orderby)


def applications_application_list_ref_token_issuance_policy(client,
                                                            application_id,
                                                            orderby=None):
    return client.list_ref_token_issuance_policies(application_id=application_id,
                                                   orderby=orderby)


def applications_application_list_ref_token_lifetime_policy(client,
                                                            application_id,
                                                            orderby=None):
    return client.list_ref_token_lifetime_policies(application_id=application_id,
                                                   orderby=orderby)


def applications_application_list_token_issuance_policy(client,
                                                        application_id,
                                                        orderby=None,
                                                        select=None,
                                                        expand=None):
    return client.list_token_issuance_policies(application_id=application_id,
                                               orderby=orderby,
                                               select=select,
                                               expand=expand)


def applications_application_list_token_lifetime_policy(client,
                                                        application_id,
                                                        orderby=None,
                                                        select=None,
                                                        expand=None):
    return client.list_token_lifetime_policies(application_id=application_id,
                                               orderby=orderby,
                                               select=select,
                                               expand=expand)


def applications_application_remove_key(client,
                                        application_id,
                                        key_id=None,
                                        proof=None):
    body = {}
    body['key_id'] = key_id
    body['proof'] = proof
    return client.remove_key(application_id=application_id,
                             body=body)


def applications_application_remove_password(client,
                                             application_id,
                                             key_id=None):
    body = {}
    body['key_id'] = key_id
    return client.remove_password(application_id=application_id,
                                  body=body)


def applications_application_restore(client,
                                     application_id):
    return client.restore(application_id=application_id)


def applications_application_set_ref_created_on_behalf_of(client,
                                                          application_id,
                                                          body):
    return client.set_ref_created_on_behalf_of(application_id=application_id,
                                               body=body)


def applications_application_show_created_on_behalf_of(client,
                                                       application_id,
                                                       select=None,
                                                       expand=None):
    return client.get_created_on_behalf_of(application_id=application_id,
                                           select=select,
                                           expand=expand)


def applications_application_show_extension_property(client,
                                                     application_id,
                                                     extension_property_id,
                                                     select=None,
                                                     expand=None):
    return client.get_extension_properties(application_id=application_id,
                                           extension_property_id=extension_property_id,
                                           select=select,
                                           expand=expand)


def applications_application_show_ref_created_on_behalf_of(client,
                                                           application_id):
    return client.get_ref_created_on_behalf_of(application_id=application_id)


def applications_application_update_extension_property(client,
                                                       application_id,
                                                       extension_property_id,
                                                       id_=None,
                                                       deleted_date_time=None,
                                                       app_display_name=None,
                                                       data_type=None,
                                                       is_synced_from_on_premises=None,
                                                       name=None,
                                                       target_objects=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_display_name'] = app_display_name
    body['data_type'] = data_type
    body['is_synced_from_on_premises'] = is_synced_from_on_premises
    body['name'] = name
    body['target_objects'] = target_objects
    return client.update_extension_properties(application_id=application_id,
                                              extension_property_id=extension_property_id,
                                              body=body)


def applications_application_validate_property(client,
                                               entity_type=None,
                                               display_name=None,
                                               mail_nickname=None,
                                               on_behalf_of_user_id=None):
    body = {}
    body['entity_type'] = entity_type
    body['display_name'] = display_name
    body['mail_nickname'] = mail_nickname
    body['on_behalf_of_user_id'] = on_behalf_of_user_id
    return client.validate_properties(body=body)


def applications_group_create_app_role_assignment(client,
                                                  group_id,
                                                  id_=None,
                                                  deleted_date_time=None,
                                                  app_role_id=None,
                                                  created_date_time=None,
                                                  principal_display_name=None,
                                                  principal_id=None,
                                                  principal_type=None,
                                                  resource_display_name=None,
                                                  resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.create_app_role_assignments(group_id=group_id,
                                              body=body)


def applications_group_delete_app_role_assignment(client,
                                                  group_id,
                                                  app_role_assignment_id,
                                                  if_match=None):
    return client.delete_app_role_assignments(group_id=group_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              if_match=if_match)


def applications_group_list_app_role_assignment(client,
                                                group_id,
                                                orderby=None,
                                                select=None,
                                                expand=None):
    return client.list_app_role_assignments(group_id=group_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_group_show_app_role_assignment(client,
                                                group_id,
                                                app_role_assignment_id,
                                                select=None,
                                                expand=None):
    return client.get_app_role_assignments(group_id=group_id,
                                           app_role_assignment_id=app_role_assignment_id,
                                           select=select,
                                           expand=expand)


def applications_group_update_app_role_assignment(client,
                                                  group_id,
                                                  app_role_assignment_id,
                                                  id_=None,
                                                  deleted_date_time=None,
                                                  app_role_id=None,
                                                  created_date_time=None,
                                                  principal_display_name=None,
                                                  principal_id=None,
                                                  principal_type=None,
                                                  resource_display_name=None,
                                                  resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.update_app_role_assignments(group_id=group_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              body=body)


def applications_service_principal_service_principal_create_service_principal(client,
                                                                              id_=None,
                                                                              deleted_date_time=None,
                                                                              account_enabled=None,
                                                                              add_ins=None,
                                                                              alternative_names=None,
                                                                              app_description=None,
                                                                              app_display_name=None,
                                                                              app_id=None,
                                                                              application_template_id=None,
                                                                              app_owner_organization_id=None,
                                                                              app_role_assignment_required=None,
                                                                              app_roles=None,
                                                                              description=None,
                                                                              display_name=None,
                                                                              homepage=None,
                                                                              info=None,
                                                                              key_credentials=None,
                                                                              login_url=None,
                                                                              logout_url=None,
                                                                              notes=None,
                                                                              notification_email_addresses=None,
                                                                              oauth2_permission_scopes=None,
                                                                              password_credentials=None,
                                                                              preferred_single_sign_on_mode=None,
                                                                              preferred_token_signing_key_thumbprint=None,
                                                                              reply_urls=None,
                                                                              service_principal_names=None,
                                                                              service_principal_type=None,
                                                                              tags=None,
                                                                              token_encryption_key_id=None,
                                                                              app_role_assigned_to=None,
                                                                              app_role_assignments=None,
                                                                              claims_mapping_policies=None,
                                                                              created_objects=None,
                                                                              endpoints=None,
                                                                              home_realm_discovery_policies=None,
                                                                              member_of=None,
                                                                              oauth2_permission_grants=None,
                                                                              owned_objects=None,
                                                                              owners=None,
                                                                              token_issuance_policies=None,
                                                                              token_lifetime_policies=None,
                                                                              transitive_member_of=None,
                                                                              relay_state=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['account_enabled'] = account_enabled
    body['add_ins'] = add_ins
    body['alternative_names'] = alternative_names
    body['app_description'] = app_description
    body['app_display_name'] = app_display_name
    body['app_id'] = app_id
    body['application_template_id'] = application_template_id
    body['app_owner_organization_id'] = app_owner_organization_id
    body['app_role_assignment_required'] = app_role_assignment_required
    body['app_roles'] = app_roles
    body['description'] = description
    body['display_name'] = display_name
    body['homepage'] = homepage
    body['info'] = info
    body['key_credentials'] = key_credentials
    body['login_url'] = login_url
    body['logout_url'] = logout_url
    body['notes'] = notes
    body['notification_email_addresses'] = notification_email_addresses
    body['oauth2_permission_scopes'] = oauth2_permission_scopes
    body['password_credentials'] = password_credentials
    body['preferred_single_sign_on_mode'] = preferred_single_sign_on_mode
    body['preferred_token_signing_key_thumbprint'] = preferred_token_signing_key_thumbprint
    body['reply_urls'] = reply_urls
    body['service_principal_names'] = service_principal_names
    body['service_principal_type'] = service_principal_type
    body['tags'] = tags
    body['token_encryption_key_id'] = token_encryption_key_id
    body['app_role_assigned_to'] = app_role_assigned_to
    body['app_role_assignments'] = app_role_assignments
    body['claims_mapping_policies'] = claims_mapping_policies
    body['created_objects'] = created_objects
    body['endpoints'] = endpoints
    body['home_realm_discovery_policies'] = home_realm_discovery_policies
    body['member_of'] = member_of
    body['oauth2_permission_grants'] = oauth2_permission_grants
    body['owned_objects'] = owned_objects
    body['owners'] = owners
    body['token_issuance_policies'] = token_issuance_policies
    body['token_lifetime_policies'] = token_lifetime_policies
    body['transitive_member_of'] = transitive_member_of
    body['saml_single_sign_on_settings'] = {}
    body['saml_single_sign_on_settings']['relay_state'] = relay_state
    return client.create_service_principal(body=body)


def applications_service_principal_service_principal_delete_service_principal(client,
                                                                              service_principal_id,
                                                                              if_match=None):
    return client.delete_service_principal(service_principal_id=service_principal_id,
                                           if_match=if_match)


def applications_service_principal_service_principal_list_service_principal(client,
                                                                            orderby=None,
                                                                            select=None,
                                                                            expand=None):
    return client.list_service_principal(orderby=orderby,
                                         select=select,
                                         expand=expand)


def applications_service_principal_service_principal_show_service_principal(client,
                                                                            service_principal_id,
                                                                            select=None,
                                                                            expand=None):
    return client.get_service_principal(service_principal_id=service_principal_id,
                                        select=select,
                                        expand=expand)


def applications_service_principal_service_principal_update_service_principal(client,
                                                                              service_principal_id,
                                                                              id_=None,
                                                                              deleted_date_time=None,
                                                                              account_enabled=None,
                                                                              add_ins=None,
                                                                              alternative_names=None,
                                                                              app_description=None,
                                                                              app_display_name=None,
                                                                              app_id=None,
                                                                              application_template_id=None,
                                                                              app_owner_organization_id=None,
                                                                              app_role_assignment_required=None,
                                                                              app_roles=None,
                                                                              description=None,
                                                                              display_name=None,
                                                                              homepage=None,
                                                                              info=None,
                                                                              key_credentials=None,
                                                                              login_url=None,
                                                                              logout_url=None,
                                                                              notes=None,
                                                                              notification_email_addresses=None,
                                                                              oauth2_permission_scopes=None,
                                                                              password_credentials=None,
                                                                              preferred_single_sign_on_mode=None,
                                                                              preferred_token_signing_key_thumbprint=None,
                                                                              reply_urls=None,
                                                                              service_principal_names=None,
                                                                              service_principal_type=None,
                                                                              tags=None,
                                                                              token_encryption_key_id=None,
                                                                              app_role_assigned_to=None,
                                                                              app_role_assignments=None,
                                                                              claims_mapping_policies=None,
                                                                              created_objects=None,
                                                                              endpoints=None,
                                                                              home_realm_discovery_policies=None,
                                                                              member_of=None,
                                                                              oauth2_permission_grants=None,
                                                                              owned_objects=None,
                                                                              owners=None,
                                                                              token_issuance_policies=None,
                                                                              token_lifetime_policies=None,
                                                                              transitive_member_of=None,
                                                                              relay_state=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['account_enabled'] = account_enabled
    body['add_ins'] = add_ins
    body['alternative_names'] = alternative_names
    body['app_description'] = app_description
    body['app_display_name'] = app_display_name
    body['app_id'] = app_id
    body['application_template_id'] = application_template_id
    body['app_owner_organization_id'] = app_owner_organization_id
    body['app_role_assignment_required'] = app_role_assignment_required
    body['app_roles'] = app_roles
    body['description'] = description
    body['display_name'] = display_name
    body['homepage'] = homepage
    body['info'] = info
    body['key_credentials'] = key_credentials
    body['login_url'] = login_url
    body['logout_url'] = logout_url
    body['notes'] = notes
    body['notification_email_addresses'] = notification_email_addresses
    body['oauth2_permission_scopes'] = oauth2_permission_scopes
    body['password_credentials'] = password_credentials
    body['preferred_single_sign_on_mode'] = preferred_single_sign_on_mode
    body['preferred_token_signing_key_thumbprint'] = preferred_token_signing_key_thumbprint
    body['reply_urls'] = reply_urls
    body['service_principal_names'] = service_principal_names
    body['service_principal_type'] = service_principal_type
    body['tags'] = tags
    body['token_encryption_key_id'] = token_encryption_key_id
    body['app_role_assigned_to'] = app_role_assigned_to
    body['app_role_assignments'] = app_role_assignments
    body['claims_mapping_policies'] = claims_mapping_policies
    body['created_objects'] = created_objects
    body['endpoints'] = endpoints
    body['home_realm_discovery_policies'] = home_realm_discovery_policies
    body['member_of'] = member_of
    body['oauth2_permission_grants'] = oauth2_permission_grants
    body['owned_objects'] = owned_objects
    body['owners'] = owners
    body['token_issuance_policies'] = token_issuance_policies
    body['token_lifetime_policies'] = token_lifetime_policies
    body['transitive_member_of'] = transitive_member_of
    body['saml_single_sign_on_settings'] = {}
    body['saml_single_sign_on_settings']['relay_state'] = relay_state
    return client.update_service_principal(service_principal_id=service_principal_id,
                                           body=body)


def applications_service_principal_add_key(client,
                                           service_principal_id,
                                           key_credential=None,
                                           password_credential=None,
                                           proof=None):
    body = {}
    body['key_credential'] = key_credential
    body['password_credential'] = password_credential
    body['proof'] = proof
    return client.add_key(service_principal_id=service_principal_id,
                          body=body)


def applications_service_principal_add_password(client,
                                                service_principal_id,
                                                password_credential=None):
    body = {}
    body['password_credential'] = password_credential
    return client.add_password(service_principal_id=service_principal_id,
                               body=body)


def applications_service_principal_check_member_group(client,
                                                      service_principal_id,
                                                      group_ids=None):
    body = {}
    body['group_ids'] = group_ids
    return client.check_member_groups(service_principal_id=service_principal_id,
                                      body=body)


def applications_service_principal_check_member_object(client,
                                                       service_principal_id,
                                                       ids=None):
    body = {}
    body['ids'] = ids
    return client.check_member_objects(service_principal_id=service_principal_id,
                                       body=body)


def applications_service_principal_create_app_role_assigned_to(client,
                                                               service_principal_id,
                                                               id_=None,
                                                               deleted_date_time=None,
                                                               app_role_id=None,
                                                               created_date_time=None,
                                                               principal_display_name=None,
                                                               principal_id=None,
                                                               principal_type=None,
                                                               resource_display_name=None,
                                                               resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.create_app_role_assigned_to(service_principal_id=service_principal_id,
                                              body=body)


def applications_service_principal_create_app_role_assignment(client,
                                                              service_principal_id,
                                                              id_=None,
                                                              deleted_date_time=None,
                                                              app_role_id=None,
                                                              created_date_time=None,
                                                              principal_display_name=None,
                                                              principal_id=None,
                                                              principal_type=None,
                                                              resource_display_name=None,
                                                              resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.create_app_role_assignments(service_principal_id=service_principal_id,
                                              body=body)


def applications_service_principal_create_endpoint(client,
                                                   service_principal_id,
                                                   id_=None,
                                                   deleted_date_time=None,
                                                   capability=None,
                                                   provider_id=None,
                                                   provider_name=None,
                                                   provider_resource_id=None,
                                                   uri=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['capability'] = capability
    body['provider_id'] = provider_id
    body['provider_name'] = provider_name
    body['provider_resource_id'] = provider_resource_id
    body['uri'] = uri
    return client.create_endpoints(service_principal_id=service_principal_id,
                                   body=body)


def applications_service_principal_create_ref_claim_mapping_policy(client,
                                                                   service_principal_id,
                                                                   body):
    return client.create_ref_claims_mapping_policies(service_principal_id=service_principal_id,
                                                     body=body)


def applications_service_principal_create_ref_created_object(client,
                                                             service_principal_id,
                                                             body):
    return client.create_ref_created_objects(service_principal_id=service_principal_id,
                                             body=body)


def applications_service_principal_create_ref_home_realm_discovery_policy(client,
                                                                          service_principal_id,
                                                                          body):
    return client.create_ref_home_realm_discovery_policies(service_principal_id=service_principal_id,
                                                           body=body)


def applications_service_principal_create_ref_member_of(client,
                                                        service_principal_id,
                                                        body):
    return client.create_ref_member_of(service_principal_id=service_principal_id,
                                       body=body)


def applications_service_principal_create_ref_oauth2_permission_grant(client,
                                                                      service_principal_id,
                                                                      body):
    return client.create_ref_oauth2_permission_grants(service_principal_id=service_principal_id,
                                                      body=body)


def applications_service_principal_create_ref_owned_object(client,
                                                           service_principal_id,
                                                           body):
    return client.create_ref_owned_objects(service_principal_id=service_principal_id,
                                           body=body)


def applications_service_principal_create_ref_owner(client,
                                                    service_principal_id,
                                                    body):
    return client.create_ref_owners(service_principal_id=service_principal_id,
                                    body=body)


def applications_service_principal_create_ref_token_issuance_policy(client,
                                                                    service_principal_id,
                                                                    body):
    return client.create_ref_token_issuance_policies(service_principal_id=service_principal_id,
                                                     body=body)


def applications_service_principal_create_ref_token_lifetime_policy(client,
                                                                    service_principal_id,
                                                                    body):
    return client.create_ref_token_lifetime_policies(service_principal_id=service_principal_id,
                                                     body=body)


def applications_service_principal_create_ref_transitive_member_of(client,
                                                                   service_principal_id,
                                                                   body):
    return client.create_ref_transitive_member_of(service_principal_id=service_principal_id,
                                                  body=body)


def applications_service_principal_delete_app_role_assigned_to(client,
                                                               service_principal_id,
                                                               app_role_assignment_id,
                                                               if_match=None):
    return client.delete_app_role_assigned_to(service_principal_id=service_principal_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              if_match=if_match)


def applications_service_principal_delete_app_role_assignment(client,
                                                              service_principal_id,
                                                              app_role_assignment_id,
                                                              if_match=None):
    return client.delete_app_role_assignments(service_principal_id=service_principal_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              if_match=if_match)


def applications_service_principal_delete_endpoint(client,
                                                   service_principal_id,
                                                   endpoint_id,
                                                   if_match=None):
    return client.delete_endpoints(service_principal_id=service_principal_id,
                                   endpoint_id=endpoint_id,
                                   if_match=if_match)


def applications_service_principal_delta(client):
    return client.delta()


def applications_service_principal_get_available_extension_property(client,
                                                                    is_synced_from_on_premises=None):
    if is_synced_from_on_premises is None:
        is_synced_from_on_premises = False
    body = {}
    body['is_synced_from_on_premises'] = False if is_synced_from_on_premises is None else is_synced_from_on_premises
    return client.get_available_extension_properties(body=body)


def applications_service_principal_get_by_id(client,
                                             ids=None,
                                             types=None):
    body = {}
    body['ids'] = ids
    body['types'] = types
    return client.get_by_ids(body=body)


def applications_service_principal_get_member_group(client,
                                                    service_principal_id,
                                                    security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    body = {}
    body['security_enabled_only'] = False if security_enabled_only is None else security_enabled_only
    return client.get_member_groups(service_principal_id=service_principal_id,
                                    body=body)


def applications_service_principal_get_member_object(client,
                                                     service_principal_id,
                                                     security_enabled_only=None):
    if security_enabled_only is None:
        security_enabled_only = False
    body = {}
    body['security_enabled_only'] = False if security_enabled_only is None else security_enabled_only
    return client.get_member_objects(service_principal_id=service_principal_id,
                                     body=body)


def applications_service_principal_list_app_role_assigned_to(client,
                                                             service_principal_id,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_app_role_assigned_to(service_principal_id=service_principal_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_service_principal_list_app_role_assignment(client,
                                                            service_principal_id,
                                                            orderby=None,
                                                            select=None,
                                                            expand=None):
    return client.list_app_role_assignments(service_principal_id=service_principal_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_service_principal_list_claim_mapping_policy(client,
                                                             service_principal_id,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_claims_mapping_policies(service_principal_id=service_principal_id,
                                               orderby=orderby,
                                               select=select,
                                               expand=expand)


def applications_service_principal_list_created_object(client,
                                                       service_principal_id,
                                                       orderby=None,
                                                       select=None,
                                                       expand=None):
    return client.list_created_objects(service_principal_id=service_principal_id,
                                       orderby=orderby,
                                       select=select,
                                       expand=expand)


def applications_service_principal_list_endpoint(client,
                                                 service_principal_id,
                                                 orderby=None,
                                                 select=None,
                                                 expand=None):
    return client.list_endpoints(service_principal_id=service_principal_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def applications_service_principal_list_home_realm_discovery_policy(client,
                                                                    service_principal_id,
                                                                    orderby=None,
                                                                    select=None,
                                                                    expand=None):
    return client.list_home_realm_discovery_policies(service_principal_id=service_principal_id,
                                                     orderby=orderby,
                                                     select=select,
                                                     expand=expand)


def applications_service_principal_list_member_of(client,
                                                  service_principal_id,
                                                  orderby=None,
                                                  select=None,
                                                  expand=None):
    return client.list_member_of(service_principal_id=service_principal_id,
                                 orderby=orderby,
                                 select=select,
                                 expand=expand)


def applications_service_principal_list_oauth2_permission_grant(client,
                                                                service_principal_id,
                                                                orderby=None,
                                                                select=None,
                                                                expand=None):
    return client.list_oauth2_permission_grants(service_principal_id=service_principal_id,
                                                orderby=orderby,
                                                select=select,
                                                expand=expand)


def applications_service_principal_list_owned_object(client,
                                                     service_principal_id,
                                                     orderby=None,
                                                     select=None,
                                                     expand=None):
    return client.list_owned_objects(service_principal_id=service_principal_id,
                                     orderby=orderby,
                                     select=select,
                                     expand=expand)


def applications_service_principal_list_owner(client,
                                              service_principal_id,
                                              orderby=None,
                                              select=None,
                                              expand=None):
    return client.list_owners(service_principal_id=service_principal_id,
                              orderby=orderby,
                              select=select,
                              expand=expand)


def applications_service_principal_list_ref_claim_mapping_policy(client,
                                                                 service_principal_id,
                                                                 orderby=None):
    return client.list_ref_claims_mapping_policies(service_principal_id=service_principal_id,
                                                   orderby=orderby)


def applications_service_principal_list_ref_created_object(client,
                                                           service_principal_id,
                                                           orderby=None):
    return client.list_ref_created_objects(service_principal_id=service_principal_id,
                                           orderby=orderby)


def applications_service_principal_list_ref_home_realm_discovery_policy(client,
                                                                        service_principal_id,
                                                                        orderby=None):
    return client.list_ref_home_realm_discovery_policies(service_principal_id=service_principal_id,
                                                         orderby=orderby)


def applications_service_principal_list_ref_member_of(client,
                                                      service_principal_id,
                                                      orderby=None):
    return client.list_ref_member_of(service_principal_id=service_principal_id,
                                     orderby=orderby)


def applications_service_principal_list_ref_oauth2_permission_grant(client,
                                                                    service_principal_id,
                                                                    orderby=None):
    return client.list_ref_oauth2_permission_grants(service_principal_id=service_principal_id,
                                                    orderby=orderby)


def applications_service_principal_list_ref_owned_object(client,
                                                         service_principal_id,
                                                         orderby=None):
    return client.list_ref_owned_objects(service_principal_id=service_principal_id,
                                         orderby=orderby)


def applications_service_principal_list_ref_owner(client,
                                                  service_principal_id,
                                                  orderby=None):
    return client.list_ref_owners(service_principal_id=service_principal_id,
                                  orderby=orderby)


def applications_service_principal_list_ref_token_issuance_policy(client,
                                                                  service_principal_id,
                                                                  orderby=None):
    return client.list_ref_token_issuance_policies(service_principal_id=service_principal_id,
                                                   orderby=orderby)


def applications_service_principal_list_ref_token_lifetime_policy(client,
                                                                  service_principal_id,
                                                                  orderby=None):
    return client.list_ref_token_lifetime_policies(service_principal_id=service_principal_id,
                                                   orderby=orderby)


def applications_service_principal_list_ref_transitive_member_of(client,
                                                                 service_principal_id,
                                                                 orderby=None):
    return client.list_ref_transitive_member_of(service_principal_id=service_principal_id,
                                                orderby=orderby)


def applications_service_principal_list_token_issuance_policy(client,
                                                              service_principal_id,
                                                              orderby=None,
                                                              select=None,
                                                              expand=None):
    return client.list_token_issuance_policies(service_principal_id=service_principal_id,
                                               orderby=orderby,
                                               select=select,
                                               expand=expand)


def applications_service_principal_list_token_lifetime_policy(client,
                                                              service_principal_id,
                                                              orderby=None,
                                                              select=None,
                                                              expand=None):
    return client.list_token_lifetime_policies(service_principal_id=service_principal_id,
                                               orderby=orderby,
                                               select=select,
                                               expand=expand)


def applications_service_principal_list_transitive_member_of(client,
                                                             service_principal_id,
                                                             orderby=None,
                                                             select=None,
                                                             expand=None):
    return client.list_transitive_member_of(service_principal_id=service_principal_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_service_principal_remove_key(client,
                                              service_principal_id,
                                              key_id=None,
                                              proof=None):
    body = {}
    body['key_id'] = key_id
    body['proof'] = proof
    return client.remove_key(service_principal_id=service_principal_id,
                             body=body)


def applications_service_principal_remove_password(client,
                                                   service_principal_id,
                                                   key_id=None):
    body = {}
    body['key_id'] = key_id
    return client.remove_password(service_principal_id=service_principal_id,
                                  body=body)


def applications_service_principal_restore(client,
                                           service_principal_id):
    return client.restore(service_principal_id=service_principal_id)


def applications_service_principal_show_app_role_assigned_to(client,
                                                             service_principal_id,
                                                             app_role_assignment_id,
                                                             select=None,
                                                             expand=None):
    return client.get_app_role_assigned_to(service_principal_id=service_principal_id,
                                           app_role_assignment_id=app_role_assignment_id,
                                           select=select,
                                           expand=expand)


def applications_service_principal_show_app_role_assignment(client,
                                                            service_principal_id,
                                                            app_role_assignment_id,
                                                            select=None,
                                                            expand=None):
    return client.get_app_role_assignments(service_principal_id=service_principal_id,
                                           app_role_assignment_id=app_role_assignment_id,
                                           select=select,
                                           expand=expand)


def applications_service_principal_show_endpoint(client,
                                                 service_principal_id,
                                                 endpoint_id,
                                                 select=None,
                                                 expand=None):
    return client.get_endpoints(service_principal_id=service_principal_id,
                                endpoint_id=endpoint_id,
                                select=select,
                                expand=expand)


def applications_service_principal_update_app_role_assigned_to(client,
                                                               service_principal_id,
                                                               app_role_assignment_id,
                                                               id_=None,
                                                               deleted_date_time=None,
                                                               app_role_id=None,
                                                               created_date_time=None,
                                                               principal_display_name=None,
                                                               principal_id=None,
                                                               principal_type=None,
                                                               resource_display_name=None,
                                                               resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.update_app_role_assigned_to(service_principal_id=service_principal_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              body=body)


def applications_service_principal_update_app_role_assignment(client,
                                                              service_principal_id,
                                                              app_role_assignment_id,
                                                              id_=None,
                                                              deleted_date_time=None,
                                                              app_role_id=None,
                                                              created_date_time=None,
                                                              principal_display_name=None,
                                                              principal_id=None,
                                                              principal_type=None,
                                                              resource_display_name=None,
                                                              resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.update_app_role_assignments(service_principal_id=service_principal_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              body=body)


def applications_service_principal_update_endpoint(client,
                                                   service_principal_id,
                                                   endpoint_id,
                                                   id_=None,
                                                   deleted_date_time=None,
                                                   capability=None,
                                                   provider_id=None,
                                                   provider_name=None,
                                                   provider_resource_id=None,
                                                   uri=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['capability'] = capability
    body['provider_id'] = provider_id
    body['provider_name'] = provider_name
    body['provider_resource_id'] = provider_resource_id
    body['uri'] = uri
    return client.update_endpoints(service_principal_id=service_principal_id,
                                   endpoint_id=endpoint_id,
                                   body=body)


def applications_service_principal_validate_property(client,
                                                     entity_type=None,
                                                     display_name=None,
                                                     mail_nickname=None,
                                                     on_behalf_of_user_id=None):
    body = {}
    body['entity_type'] = entity_type
    body['display_name'] = display_name
    body['mail_nickname'] = mail_nickname
    body['on_behalf_of_user_id'] = on_behalf_of_user_id
    return client.validate_properties(body=body)


def applications_user_create_app_role_assignment(client,
                                                 user_id,
                                                 id_=None,
                                                 deleted_date_time=None,
                                                 app_role_id=None,
                                                 created_date_time=None,
                                                 principal_display_name=None,
                                                 principal_id=None,
                                                 principal_type=None,
                                                 resource_display_name=None,
                                                 resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.create_app_role_assignments(user_id=user_id,
                                              body=body)


def applications_user_delete_app_role_assignment(client,
                                                 user_id,
                                                 app_role_assignment_id,
                                                 if_match=None):
    return client.delete_app_role_assignments(user_id=user_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              if_match=if_match)


def applications_user_list_app_role_assignment(client,
                                               user_id,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_app_role_assignments(user_id=user_id,
                                            orderby=orderby,
                                            select=select,
                                            expand=expand)


def applications_user_show_app_role_assignment(client,
                                               user_id,
                                               app_role_assignment_id,
                                               select=None,
                                               expand=None):
    return client.get_app_role_assignments(user_id=user_id,
                                           app_role_assignment_id=app_role_assignment_id,
                                           select=select,
                                           expand=expand)


def applications_user_update_app_role_assignment(client,
                                                 user_id,
                                                 app_role_assignment_id,
                                                 id_=None,
                                                 deleted_date_time=None,
                                                 app_role_id=None,
                                                 created_date_time=None,
                                                 principal_display_name=None,
                                                 principal_id=None,
                                                 principal_type=None,
                                                 resource_display_name=None,
                                                 resource_id=None):
    body = {}
    body['id'] = id_
    body['deleted_date_time'] = deleted_date_time
    body['app_role_id'] = app_role_id
    body['created_date_time'] = created_date_time
    body['principal_display_name'] = principal_display_name
    body['principal_id'] = principal_id
    body['principal_type'] = principal_type
    body['resource_display_name'] = resource_display_name
    body['resource_id'] = resource_id
    return client.update_app_role_assignments(user_id=user_id,
                                              app_role_assignment_id=app_role_assignment_id,
                                              body=body)
