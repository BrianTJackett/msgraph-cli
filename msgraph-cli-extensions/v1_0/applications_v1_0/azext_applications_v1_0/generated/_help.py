# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['applications_v1_0'] = '''
    type: group
    short-summary: Manage Applications
'''

helps['applications application'] = """
    type: group
    short-summary: Manage application application with applications_v1_0
"""

helps['applications application list'] = """
    type: command
    short-summary: "Get entities from applications."
"""

helps['applications application create'] = """
    type: command
    short-summary: "Add new entity to applications."
    parameters:
      - name: --app-roles
        short-summary: "The collection of roles the application declares. With app role assignments, these roles can \
be assigned to users, groups, or other applications' service principals. Not nullable."
        long-summary: |
            Usage: --app-roles allowed-member-types=XX description=XX display-name=XX id=XX is-enabled=XX origin=XX \
value=XX

            allowed-member-types: Specifies whether this app role can be assigned to users and groups (by setting to \
['User']), to other application's (by setting to ['Application'], or both (by setting to ['User', 'Application']). App \
roles supporting assignment of other applications' service principals are also known as application permissions.
            description: The description for the app role. This is displayed when the app role is being assigned and, \
if the app role functions as an application permission, during  consent experiences.
            display-name: Display name for the permission that appears in the app role assignment and consent \
experiences.
            id: Unique role identifier inside the appRoles collection. When creating a new app role, a new Guid \
identifier must be provided.
            is-enabled: When creating or updating an app role, this must be set to true (which is the default). To \
delete a role, this must first be set to false.  At that point, in a subsequent call, this role may be removed.
            origin: Specifies if the app role is defined on the application object or on the servicePrincipal entity. \
Must not be included in any POST or PATCH requests. Read-only.
            value: Specifies the value to include in the roles claim in ID tokens and access tokens authenticating an \
assigned user or service principal. Must not exceed 120 characters in length. Allowed characters are : ! # $ % & ' ( ) \
* + , - . / : ;  =  ? @ [ ] ^ + _  {  } ~, as well as characters in the ranges 0-9, A-Z and a-z. Any other character, \
including the space character, are not allowed.

            Multiple actions can be specified by using more than one --app-roles argument.
      - name: --info
        short-summary: "informationalUrl"
        long-summary: |
            Usage: --info logo-url=XX marketing-url=XX privacy-statement-url=XX support-url=XX terms-of-service-url=XX

            logo-url: CDN URL to the application's logo, Read-only.
            marketing-url: Link to the application's marketing page. For example, https://www.contoso.com/app/marketing
            privacy-statement-url: Link to the application's privacy statement. For example, \
https://www.contoso.com/app/privacy
            support-url: Link to the application's support page. For example, https://www.contoso.com/app/support
            terms-of-service-url: Link to the application's terms of service statement. For example, \
https://www.contoso.com/app/termsofservice
      - name: --key-credentials
        short-summary: "The collection of key credentials associated with the application Not nullable."
        long-summary: |
            Usage: --key-credentials custom-key-identifier=XX display-name=XX end-date-time=XX key=XX key-id=XX \
start-date-time=XX type=XX usage=XX

            custom-key-identifier: Custom key identifier
            display-name: Friendly name for the key. Optional.
            end-date-time: The date and time at which the credential expires.The Timestamp type represents date and \
time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look \
like this: '2014-01-01T00:00:00Z'
            key: Value for the key credential. Should be a base 64 encoded value.
            key-id: The unique identifier (GUID) for the key.
            start-date-time: The date and time at which the credential becomes valid.The Timestamp type represents \
date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 \
would look like this: '2014-01-01T00:00:00Z'
            type: The type of key credential; for example, 'Symmetric'.
            usage: A string that describes the purpose for which the key can be used; for example, 'Verify'.

            Multiple actions can be specified by using more than one --key-credentials argument.
      - name: --parental-control-settings
        short-summary: "parentalControlSettings"
        long-summary: |
            Usage: --parental-control-settings countries-blocked-for-minors=XX legal-age-group-rule=XX

            countries-blocked-for-minors: Specifies the two-letter ISO country codes. Access to the application will \
be blocked for minors from the countries specified in this list.
            legal-age-group-rule: Specifies the legal age group rule that applies to users of the app. Can be set to \
one of the following values: ValueDescriptionAllowDefault. Enforces the legal minimum. This means parental consent is \
required for minors in the European Union and Korea.RequireConsentForPrivacyServicesEnforces the user to specify date \
of birth to comply with COPPA rules. RequireConsentForMinorsRequires parental consent for ages below 18, regardless of \
country minor rules.RequireConsentForKidsRequires parental consent for ages below 14, regardless of country minor \
rules.BlockMinorsBlocks minors from using the app.
      - name: --password-credentials
        short-summary: "The collection of password credentials associated with the application. Not nullable."
        long-summary: |
            Usage: --password-credentials custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.

            Multiple actions can be specified by using more than one --password-credentials argument.
      - name: --public-client
        short-summary: "publicClientApplication"
        long-summary: |
            Usage: --public-client redirect-uris=XX

            redirect-uris: Specifies the URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth \
2.0 authorization codes and access tokens are sent.
      - name: --created-on-behalf-of
        short-summary: "Represents an Azure Active Directory object. The directoryObject type is the base type for \
many other directory entity types."
        long-summary: |
            Usage: --created-on-behalf-of deleted-date-time=XX id=XX

            id: Read-only.
      - name: --extension-properties
        short-summary: "Read-only. Nullable."
        long-summary: |
            Usage: --extension-properties app-display-name=XX data-type=XX is-synced-from-on-premises=XX name=XX \
target-objects=XX deleted-date-time=XX id=XX

            app-display-name: Display name of the application object on which this extension property is defined. \
Read-only.
            data-type: Specifies the data type of the value the extension property can hold. Following values are \
supported. Not nullable. Binary - 256 bytes maximumBooleanDateTime - Must be specified in ISO 8601 format. Will be \
stored in UTC.Integer - 32-bit value.LargeInteger - 64-bit value.String - 256 characters maximum
            is-synced-from-on-premises: Indicates if this extension property was sycned from onpremises directory \
using Azure AD Connect. Read-only.
            name: Name of the extension property. Not nullable.
            target-objects: Following values are supported. Not nullable. UserGroupOrganizationDeviceApplication
            id: Read-only.

            Multiple actions can be specified by using more than one --extension-properties argument.
      - name: --home-realm-discovery-policies
        long-summary: |
            Usage: --home-realm-discovery-policies definition=XX is-organization-default=XX applies-to=XX \
description=XX display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --home-realm-discovery-policies argument.
      - name: --owners
        short-summary: "Directory objects that are owners of the application. The owners are a set of non-admin users \
who are allowed to modify this object. Requires version 2013-11-08 or newer. Read-only. Nullable."
        long-summary: |
            Usage: --owners deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --owners argument.
      - name: --token-issuance-policies
        long-summary: |
            Usage: --token-issuance-policies definition=XX is-organization-default=XX applies-to=XX description=XX \
display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --token-issuance-policies argument.
      - name: --token-lifetime-policies
        long-summary: |
            Usage: --token-lifetime-policies definition=XX is-organization-default=XX applies-to=XX description=XX \
display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --token-lifetime-policies argument.
      - name: --implicit-grant-settings
        short-summary: "implicitGrantSettings"
        long-summary: |
            Usage: --implicit-grant-settings enable-access-token-issuance=XX enable-id-token-issuance=XX

            enable-access-token-issuance: Specifies whether this web application can request an access token using the \
OAuth 2.0 implicit flow.
            enable-id-token-issuance: Specifies whether this web application can request an ID token using the OAuth \
2.0 implicit flow.
      - name: --access-token
        short-summary: "The optional claims returned in the JWT access token."
        long-summary: |
            Usage: --access-token additional-properties=XX essential=XX name=XX source=XX

            additional-properties: Additional properties of the claim. If a property exists in this collection, it \
modifies the behavior of the optional claim specified in the name property.
            essential: If the value is true, the claim specified by the client is necessary to ensure a smooth \
authorization experience for the specific task requested by the end user. The default value is false.
            name: The name of the optional claim.
            source: The source (directory object) of the claim. There are predefined claims and user-defined claims \
from extension properties. If the source value is null, the claim is a predefined optional claim. If the source value \
is user, the value in the name property is the extension property from the user object.

            Multiple actions can be specified by using more than one --access-token argument.
      - name: --id-token
        short-summary: "The optional claims returned in the JWT ID token."
        long-summary: |
            Usage: --id-token additional-properties=XX essential=XX name=XX source=XX

            additional-properties: Additional properties of the claim. If a property exists in this collection, it \
modifies the behavior of the optional claim specified in the name property.
            essential: If the value is true, the claim specified by the client is necessary to ensure a smooth \
authorization experience for the specific task requested by the end user. The default value is false.
            name: The name of the optional claim.
            source: The source (directory object) of the claim. There are predefined claims and user-defined claims \
from extension properties. If the source value is null, the claim is a predefined optional claim. If the source value \
is user, the value in the name property is the extension property from the user object.

            Multiple actions can be specified by using more than one --id-token argument.
      - name: --saml2-token
        short-summary: "The optional claims returned in the SAML token."
        long-summary: |
            Usage: --saml2-token additional-properties=XX essential=XX name=XX source=XX

            additional-properties: Additional properties of the claim. If a property exists in this collection, it \
modifies the behavior of the optional claim specified in the name property.
            essential: If the value is true, the claim specified by the client is necessary to ensure a smooth \
authorization experience for the specific task requested by the end user. The default value is false.
            name: The name of the optional claim.
            source: The source (directory object) of the claim. There are predefined claims and user-defined claims \
from extension properties. If the source value is null, the claim is a predefined optional claim. If the source value \
is user, the value in the name property is the extension property from the user object.

            Multiple actions can be specified by using more than one --saml2-token argument.
      - name: --oauth2-permission-scopes
        short-summary: "The definition of the delegated permissions exposed by the web API represented by this \
application registration. These delegated permissions may be requested by a client application, and may be granted by \
users or administrators during consent. Delegated permissions are sometimes referred to as OAuth 2.0 scopes."
        long-summary: |
            Usage: --oauth2-permission-scopes admin-consent-description=XX admin-consent-display-name=XX id=XX \
is-enabled=XX origin=XX type=XX user-consent-description=XX user-consent-display-name=XX value=XX

            admin-consent-description: A description of the delegated permissions, intended to be read by an \
administrator granting the permission on behalf of all users. This text appears in tenant-wide admin consent \
experiences.
            admin-consent-display-name: The permission's title, intended to be read by an administrator granting the \
permission on behalf of all users.
            id: Unique delegated permission identifier inside the collection of delegated permissions defined for a \
resource application.
            is-enabled: When creating or updating a permission, this property must be set to true (which is the \
default). To delete a permission, this property must first be set to false.  At that point, in a subsequent call, the \
permission may be removed.
            type: Specifies whether this delegated permission should be considered safe for non-admin users to consent \
to on behalf of themselves, or whether an administrator should be required for consent to the permissions. This will \
be the default behavior, but each customer can choose to customize the behavior in their organization (by allowing, \
restricting or limiting user consent to this delegated permission.)
            user-consent-description: A description of the delegated permissions, intended to be read by a user \
granting the permission on their own behalf. This text appears in consent experiences where the user is consenting \
only on behalf of themselves.
            user-consent-display-name: A title for the permission, intended to be read by a user granting the \
permission on their own behalf. This text appears in consent experiences where the user is consenting only on behalf \
of themselves.
            value: Specifies the value to include in the scp (scope) claim in access tokens. Must not exceed 120 \
characters in length. Allowed characters are : ! # $ % & ' ( ) * + , - . / : ;  =  ? @ [ ] ^ + _  {  } ~, as well as \
characters in the ranges 0-9, A-Z and a-z. Any other character, including the space character, are not allowed.

            Multiple actions can be specified by using more than one --oauth2-permission-scopes argument.
      - name: --pre-authorized-applications
        short-summary: "Lists the client applications that are pre-authorized with the specified delegated permissions \
to access this application's APIs. Users are not required to consent to any pre-authorized application (for the \
permissions specified). However, any additional permissions not listed in preAuthorizedApplications (requested through \
incremental consent for example) will require user consent."
        long-summary: |
            Usage: --pre-authorized-applications app-id=XX delegated-permission-ids=XX

            app-id: The unique identifier for the application.
            delegated-permission-ids: The unique identifier for the oauth2PermissionScopes the application requires.

            Multiple actions can be specified by using more than one --pre-authorized-applications argument.
"""

helps['applications application update'] = """
    type: command
    short-summary: "Update entity in applications."
    parameters:
      - name: --app-roles
        short-summary: "The collection of roles the application declares. With app role assignments, these roles can \
be assigned to users, groups, or other applications' service principals. Not nullable."
        long-summary: |
            Usage: --app-roles allowed-member-types=XX description=XX display-name=XX id=XX is-enabled=XX origin=XX \
value=XX

            allowed-member-types: Specifies whether this app role can be assigned to users and groups (by setting to \
['User']), to other application's (by setting to ['Application'], or both (by setting to ['User', 'Application']). App \
roles supporting assignment of other applications' service principals are also known as application permissions.
            description: The description for the app role. This is displayed when the app role is being assigned and, \
if the app role functions as an application permission, during  consent experiences.
            display-name: Display name for the permission that appears in the app role assignment and consent \
experiences.
            id: Unique role identifier inside the appRoles collection. When creating a new app role, a new Guid \
identifier must be provided.
            is-enabled: When creating or updating an app role, this must be set to true (which is the default). To \
delete a role, this must first be set to false.  At that point, in a subsequent call, this role may be removed.
            origin: Specifies if the app role is defined on the application object or on the servicePrincipal entity. \
Must not be included in any POST or PATCH requests. Read-only.
            value: Specifies the value to include in the roles claim in ID tokens and access tokens authenticating an \
assigned user or service principal. Must not exceed 120 characters in length. Allowed characters are : ! # $ % & ' ( ) \
* + , - . / : ;  =  ? @ [ ] ^ + _  {  } ~, as well as characters in the ranges 0-9, A-Z and a-z. Any other character, \
including the space character, are not allowed.

            Multiple actions can be specified by using more than one --app-roles argument.
      - name: --info
        short-summary: "informationalUrl"
        long-summary: |
            Usage: --info logo-url=XX marketing-url=XX privacy-statement-url=XX support-url=XX terms-of-service-url=XX

            logo-url: CDN URL to the application's logo, Read-only.
            marketing-url: Link to the application's marketing page. For example, https://www.contoso.com/app/marketing
            privacy-statement-url: Link to the application's privacy statement. For example, \
https://www.contoso.com/app/privacy
            support-url: Link to the application's support page. For example, https://www.contoso.com/app/support
            terms-of-service-url: Link to the application's terms of service statement. For example, \
https://www.contoso.com/app/termsofservice
      - name: --key-credentials
        short-summary: "The collection of key credentials associated with the application Not nullable."
        long-summary: |
            Usage: --key-credentials custom-key-identifier=XX display-name=XX end-date-time=XX key=XX key-id=XX \
start-date-time=XX type=XX usage=XX

            custom-key-identifier: Custom key identifier
            display-name: Friendly name for the key. Optional.
            end-date-time: The date and time at which the credential expires.The Timestamp type represents date and \
time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look \
like this: '2014-01-01T00:00:00Z'
            key: Value for the key credential. Should be a base 64 encoded value.
            key-id: The unique identifier (GUID) for the key.
            start-date-time: The date and time at which the credential becomes valid.The Timestamp type represents \
date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 \
would look like this: '2014-01-01T00:00:00Z'
            type: The type of key credential; for example, 'Symmetric'.
            usage: A string that describes the purpose for which the key can be used; for example, 'Verify'.

            Multiple actions can be specified by using more than one --key-credentials argument.
      - name: --parental-control-settings
        short-summary: "parentalControlSettings"
        long-summary: |
            Usage: --parental-control-settings countries-blocked-for-minors=XX legal-age-group-rule=XX

            countries-blocked-for-minors: Specifies the two-letter ISO country codes. Access to the application will \
be blocked for minors from the countries specified in this list.
            legal-age-group-rule: Specifies the legal age group rule that applies to users of the app. Can be set to \
one of the following values: ValueDescriptionAllowDefault. Enforces the legal minimum. This means parental consent is \
required for minors in the European Union and Korea.RequireConsentForPrivacyServicesEnforces the user to specify date \
of birth to comply with COPPA rules. RequireConsentForMinorsRequires parental consent for ages below 18, regardless of \
country minor rules.RequireConsentForKidsRequires parental consent for ages below 14, regardless of country minor \
rules.BlockMinorsBlocks minors from using the app.
      - name: --password-credentials
        short-summary: "The collection of password credentials associated with the application. Not nullable."
        long-summary: |
            Usage: --password-credentials custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.

            Multiple actions can be specified by using more than one --password-credentials argument.
      - name: --public-client
        short-summary: "publicClientApplication"
        long-summary: |
            Usage: --public-client redirect-uris=XX

            redirect-uris: Specifies the URLs where user tokens are sent for sign-in, or the redirect URIs where OAuth \
2.0 authorization codes and access tokens are sent.
      - name: --created-on-behalf-of
        short-summary: "Represents an Azure Active Directory object. The directoryObject type is the base type for \
many other directory entity types."
        long-summary: |
            Usage: --created-on-behalf-of deleted-date-time=XX id=XX

            id: Read-only.
      - name: --extension-properties
        short-summary: "Read-only. Nullable."
        long-summary: |
            Usage: --extension-properties app-display-name=XX data-type=XX is-synced-from-on-premises=XX name=XX \
target-objects=XX deleted-date-time=XX id=XX

            app-display-name: Display name of the application object on which this extension property is defined. \
Read-only.
            data-type: Specifies the data type of the value the extension property can hold. Following values are \
supported. Not nullable. Binary - 256 bytes maximumBooleanDateTime - Must be specified in ISO 8601 format. Will be \
stored in UTC.Integer - 32-bit value.LargeInteger - 64-bit value.String - 256 characters maximum
            is-synced-from-on-premises: Indicates if this extension property was sycned from onpremises directory \
using Azure AD Connect. Read-only.
            name: Name of the extension property. Not nullable.
            target-objects: Following values are supported. Not nullable. UserGroupOrganizationDeviceApplication
            id: Read-only.

            Multiple actions can be specified by using more than one --extension-properties argument.
      - name: --home-realm-discovery-policies
        long-summary: |
            Usage: --home-realm-discovery-policies definition=XX is-organization-default=XX applies-to=XX \
description=XX display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --home-realm-discovery-policies argument.
      - name: --owners
        short-summary: "Directory objects that are owners of the application. The owners are a set of non-admin users \
who are allowed to modify this object. Requires version 2013-11-08 or newer. Read-only. Nullable."
        long-summary: |
            Usage: --owners deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --owners argument.
      - name: --token-issuance-policies
        long-summary: |
            Usage: --token-issuance-policies definition=XX is-organization-default=XX applies-to=XX description=XX \
display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --token-issuance-policies argument.
      - name: --token-lifetime-policies
        long-summary: |
            Usage: --token-lifetime-policies definition=XX is-organization-default=XX applies-to=XX description=XX \
display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --token-lifetime-policies argument.
      - name: --implicit-grant-settings
        short-summary: "implicitGrantSettings"
        long-summary: |
            Usage: --implicit-grant-settings enable-access-token-issuance=XX enable-id-token-issuance=XX

            enable-access-token-issuance: Specifies whether this web application can request an access token using the \
OAuth 2.0 implicit flow.
            enable-id-token-issuance: Specifies whether this web application can request an ID token using the OAuth \
2.0 implicit flow.
      - name: --access-token
        short-summary: "The optional claims returned in the JWT access token."
        long-summary: |
            Usage: --access-token additional-properties=XX essential=XX name=XX source=XX

            additional-properties: Additional properties of the claim. If a property exists in this collection, it \
modifies the behavior of the optional claim specified in the name property.
            essential: If the value is true, the claim specified by the client is necessary to ensure a smooth \
authorization experience for the specific task requested by the end user. The default value is false.
            name: The name of the optional claim.
            source: The source (directory object) of the claim. There are predefined claims and user-defined claims \
from extension properties. If the source value is null, the claim is a predefined optional claim. If the source value \
is user, the value in the name property is the extension property from the user object.

            Multiple actions can be specified by using more than one --access-token argument.
      - name: --id-token
        short-summary: "The optional claims returned in the JWT ID token."
        long-summary: |
            Usage: --id-token additional-properties=XX essential=XX name=XX source=XX

            additional-properties: Additional properties of the claim. If a property exists in this collection, it \
modifies the behavior of the optional claim specified in the name property.
            essential: If the value is true, the claim specified by the client is necessary to ensure a smooth \
authorization experience for the specific task requested by the end user. The default value is false.
            name: The name of the optional claim.
            source: The source (directory object) of the claim. There are predefined claims and user-defined claims \
from extension properties. If the source value is null, the claim is a predefined optional claim. If the source value \
is user, the value in the name property is the extension property from the user object.

            Multiple actions can be specified by using more than one --id-token argument.
      - name: --saml2-token
        short-summary: "The optional claims returned in the SAML token."
        long-summary: |
            Usage: --saml2-token additional-properties=XX essential=XX name=XX source=XX

            additional-properties: Additional properties of the claim. If a property exists in this collection, it \
modifies the behavior of the optional claim specified in the name property.
            essential: If the value is true, the claim specified by the client is necessary to ensure a smooth \
authorization experience for the specific task requested by the end user. The default value is false.
            name: The name of the optional claim.
            source: The source (directory object) of the claim. There are predefined claims and user-defined claims \
from extension properties. If the source value is null, the claim is a predefined optional claim. If the source value \
is user, the value in the name property is the extension property from the user object.

            Multiple actions can be specified by using more than one --saml2-token argument.
      - name: --oauth2-permission-scopes
        short-summary: "The definition of the delegated permissions exposed by the web API represented by this \
application registration. These delegated permissions may be requested by a client application, and may be granted by \
users or administrators during consent. Delegated permissions are sometimes referred to as OAuth 2.0 scopes."
        long-summary: |
            Usage: --oauth2-permission-scopes admin-consent-description=XX admin-consent-display-name=XX id=XX \
is-enabled=XX origin=XX type=XX user-consent-description=XX user-consent-display-name=XX value=XX

            admin-consent-description: A description of the delegated permissions, intended to be read by an \
administrator granting the permission on behalf of all users. This text appears in tenant-wide admin consent \
experiences.
            admin-consent-display-name: The permission's title, intended to be read by an administrator granting the \
permission on behalf of all users.
            id: Unique delegated permission identifier inside the collection of delegated permissions defined for a \
resource application.
            is-enabled: When creating or updating a permission, this property must be set to true (which is the \
default). To delete a permission, this property must first be set to false.  At that point, in a subsequent call, the \
permission may be removed.
            type: Specifies whether this delegated permission should be considered safe for non-admin users to consent \
to on behalf of themselves, or whether an administrator should be required for consent to the permissions. This will \
be the default behavior, but each customer can choose to customize the behavior in their organization (by allowing, \
restricting or limiting user consent to this delegated permission.)
            user-consent-description: A description of the delegated permissions, intended to be read by a user \
granting the permission on their own behalf. This text appears in consent experiences where the user is consenting \
only on behalf of themselves.
            user-consent-display-name: A title for the permission, intended to be read by a user granting the \
permission on their own behalf. This text appears in consent experiences where the user is consenting only on behalf \
of themselves.
            value: Specifies the value to include in the scp (scope) claim in access tokens. Must not exceed 120 \
characters in length. Allowed characters are : ! # $ % & ' ( ) * + , - . / : ;  =  ? @ [ ] ^ + _  {  } ~, as well as \
characters in the ranges 0-9, A-Z and a-z. Any other character, including the space character, are not allowed.

            Multiple actions can be specified by using more than one --oauth2-permission-scopes argument.
      - name: --pre-authorized-applications
        short-summary: "Lists the client applications that are pre-authorized with the specified delegated permissions \
to access this application's APIs. Users are not required to consent to any pre-authorized application (for the \
permissions specified). However, any additional permissions not listed in preAuthorizedApplications (requested through \
incremental consent for example) will require user consent."
        long-summary: |
            Usage: --pre-authorized-applications app-id=XX delegated-permission-ids=XX

            app-id: The unique identifier for the application.
            delegated-permission-ids: The unique identifier for the oauth2PermissionScopes the application requires.

            Multiple actions can be specified by using more than one --pre-authorized-applications argument.
"""

helps['applications application delete-application'] = """
    type: command
    short-summary: "Delete entity from applications."
"""

helps['applications application set-logo'] = """
    type: command
    short-summary: "Update media content for application in applications."
"""

helps['applications application show-application'] = """
    type: command
    short-summary: "Get entity from applications by key."
"""

helps['applications application show-logo'] = """
    type: command
    short-summary: "Get media content for application from applications."
"""

helps['applications application'] = """
    type: group
    short-summary: Manage application with applications_v1_0
"""

helps['applications application add-key'] = """
    type: command
    short-summary: "Invoke action addKey."
    parameters:
      - name: --key-credential
        short-summary: "keyCredential"
        long-summary: |
            Usage: --key-credential custom-key-identifier=XX display-name=XX end-date-time=XX key=XX key-id=XX \
start-date-time=XX type=XX usage=XX

            custom-key-identifier: Custom key identifier
            display-name: Friendly name for the key. Optional.
            end-date-time: The date and time at which the credential expires.The Timestamp type represents date and \
time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look \
like this: '2014-01-01T00:00:00Z'
            key: Value for the key credential. Should be a base 64 encoded value.
            key-id: The unique identifier (GUID) for the key.
            start-date-time: The date and time at which the credential becomes valid.The Timestamp type represents \
date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 \
would look like this: '2014-01-01T00:00:00Z'
            type: The type of key credential; for example, 'Symmetric'.
            usage: A string that describes the purpose for which the key can be used; for example, 'Verify'.
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications application add-password'] = """
    type: command
    short-summary: "Invoke action addPassword."
    parameters:
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications application check-member-group'] = """
    type: command
    short-summary: "Invoke action checkMemberGroups."
"""

helps['applications application check-member-object'] = """
    type: command
    short-summary: "Invoke action checkMemberObjects."
"""

helps['applications application create-extension-property'] = """
    type: command
    short-summary: "Create new navigation property to extensionProperties for applications."
"""

helps['applications application create-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to homeRealmDiscoveryPolicies for applications."
"""

helps['applications application create-ref-owner'] = """
    type: command
    short-summary: "Create new navigation property ref to owners for applications."
"""

helps['applications application create-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenIssuancePolicies for applications."
"""

helps['applications application create-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenLifetimePolicies for applications."
"""

helps['applications application delete-extension-property'] = """
    type: command
    short-summary: "Delete navigation property extensionProperties for applications."
"""

helps['applications application delete-ref-created-on-behalf-of'] = """
    type: command
    short-summary: "Delete ref of navigation property createdOnBehalfOf for applications."
"""

helps['applications application delta'] = """
    type: command
    short-summary: "Invoke function delta."
"""

helps['applications application get-available-extension-property'] = """
    type: command
    short-summary: "Invoke action getAvailableExtensionProperties."
"""

helps['applications application get-by-id'] = """
    type: command
    short-summary: "Invoke action getByIds."
"""

helps['applications application get-member-group'] = """
    type: command
    short-summary: "Invoke action getMemberGroups."
"""

helps['applications application get-member-object'] = """
    type: command
    short-summary: "Invoke action getMemberObjects."
"""

helps['applications application list-extension-property'] = """
    type: command
    short-summary: "Get extensionProperties from applications."
"""

helps['applications application list-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get homeRealmDiscoveryPolicies from applications."
"""

helps['applications application list-owner'] = """
    type: command
    short-summary: "Get owners from applications."
"""

helps['applications application list-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get ref of homeRealmDiscoveryPolicies from applications."
"""

helps['applications application list-ref-owner'] = """
    type: command
    short-summary: "Get ref of owners from applications."
"""

helps['applications application list-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Get ref of tokenIssuancePolicies from applications."
"""

helps['applications application list-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Get ref of tokenLifetimePolicies from applications."
"""

helps['applications application list-token-issuance-policy'] = """
    type: command
    short-summary: "Get tokenIssuancePolicies from applications."
"""

helps['applications application list-token-lifetime-policy'] = """
    type: command
    short-summary: "Get tokenLifetimePolicies from applications."
"""

helps['applications application remove-key'] = """
    type: command
    short-summary: "Invoke action removeKey."
"""

helps['applications application remove-password'] = """
    type: command
    short-summary: "Invoke action removePassword."
"""

helps['applications application restore'] = """
    type: command
    short-summary: "Invoke action restore."
"""

helps['applications application set-ref-created-on-behalf-of'] = """
    type: command
    short-summary: "Update the ref of navigation property createdOnBehalfOf in applications."
"""

helps['applications application show-created-on-behalf-of'] = """
    type: command
    short-summary: "Get createdOnBehalfOf from applications."
"""

helps['applications application show-extension-property'] = """
    type: command
    short-summary: "Get extensionProperties from applications."
"""

helps['applications application show-ref-created-on-behalf-of'] = """
    type: command
    short-summary: "Get ref of createdOnBehalfOf from applications."
"""

helps['applications application update-extension-property'] = """
    type: command
    short-summary: "Update the navigation property extensionProperties in applications."
"""

helps['applications application validate-property'] = """
    type: command
    short-summary: "Invoke action validateProperties."
"""

helps['applications group'] = """
    type: group
    short-summary: Manage group with applications_v1_0
"""

helps['applications group create-app-role-assignment'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignments for groups."
"""

helps['applications group delete-app-role-assignment'] = """
    type: command
    short-summary: "Delete navigation property appRoleAssignments for groups."
"""

helps['applications group list-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from groups."
"""

helps['applications group show-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from groups."
"""

helps['applications group update-app-role-assignment'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignments in groups."
"""

helps['applications service-principal-service-principal'] = """
    type: group
    short-summary: Manage service principal service principal with applications_v1_0
"""

helps['applications service-principal-service-principal create-service-principal'] = """
    type: command
    short-summary: "Add new entity to servicePrincipals."
    parameters:
      - name: --app-roles
        short-summary: "The roles exposed by the application which this service principal represents. For more \
information see the appRoles property definition on the application entity. Not nullable."
        long-summary: |
            Usage: --app-roles allowed-member-types=XX description=XX display-name=XX id=XX is-enabled=XX origin=XX \
value=XX

            allowed-member-types: Specifies whether this app role can be assigned to users and groups (by setting to \
['User']), to other application's (by setting to ['Application'], or both (by setting to ['User', 'Application']). App \
roles supporting assignment of other applications' service principals are also known as application permissions.
            description: The description for the app role. This is displayed when the app role is being assigned and, \
if the app role functions as an application permission, during  consent experiences.
            display-name: Display name for the permission that appears in the app role assignment and consent \
experiences.
            id: Unique role identifier inside the appRoles collection. When creating a new app role, a new Guid \
identifier must be provided.
            is-enabled: When creating or updating an app role, this must be set to true (which is the default). To \
delete a role, this must first be set to false.  At that point, in a subsequent call, this role may be removed.
            origin: Specifies if the app role is defined on the application object or on the servicePrincipal entity. \
Must not be included in any POST or PATCH requests. Read-only.
            value: Specifies the value to include in the roles claim in ID tokens and access tokens authenticating an \
assigned user or service principal. Must not exceed 120 characters in length. Allowed characters are : ! # $ % & ' ( ) \
* + , - . / : ;  =  ? @ [ ] ^ + _  {  } ~, as well as characters in the ranges 0-9, A-Z and a-z. Any other character, \
including the space character, are not allowed.

            Multiple actions can be specified by using more than one --app-roles argument.
      - name: --info
        short-summary: "informationalUrl"
        long-summary: |
            Usage: --info logo-url=XX marketing-url=XX privacy-statement-url=XX support-url=XX terms-of-service-url=XX

            logo-url: CDN URL to the application's logo, Read-only.
            marketing-url: Link to the application's marketing page. For example, https://www.contoso.com/app/marketing
            privacy-statement-url: Link to the application's privacy statement. For example, \
https://www.contoso.com/app/privacy
            support-url: Link to the application's support page. For example, https://www.contoso.com/app/support
            terms-of-service-url: Link to the application's terms of service statement. For example, \
https://www.contoso.com/app/termsofservice
      - name: --key-credentials
        short-summary: "The collection of key credentials associated with the service principal. Not nullable."
        long-summary: |
            Usage: --key-credentials custom-key-identifier=XX display-name=XX end-date-time=XX key=XX key-id=XX \
start-date-time=XX type=XX usage=XX

            custom-key-identifier: Custom key identifier
            display-name: Friendly name for the key. Optional.
            end-date-time: The date and time at which the credential expires.The Timestamp type represents date and \
time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look \
like this: '2014-01-01T00:00:00Z'
            key: Value for the key credential. Should be a base 64 encoded value.
            key-id: The unique identifier (GUID) for the key.
            start-date-time: The date and time at which the credential becomes valid.The Timestamp type represents \
date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 \
would look like this: '2014-01-01T00:00:00Z'
            type: The type of key credential; for example, 'Symmetric'.
            usage: A string that describes the purpose for which the key can be used; for example, 'Verify'.

            Multiple actions can be specified by using more than one --key-credentials argument.
      - name: --oauth2-permission-scopes
        short-summary: "The delegated permissions exposed by the application. For more information see the \
oauth2PermissionScopes property on the application entity's api property. Not nullable."
        long-summary: |
            Usage: --oauth2-permission-scopes admin-consent-description=XX admin-consent-display-name=XX id=XX \
is-enabled=XX origin=XX type=XX user-consent-description=XX user-consent-display-name=XX value=XX

            admin-consent-description: A description of the delegated permissions, intended to be read by an \
administrator granting the permission on behalf of all users. This text appears in tenant-wide admin consent \
experiences.
            admin-consent-display-name: The permission's title, intended to be read by an administrator granting the \
permission on behalf of all users.
            id: Unique delegated permission identifier inside the collection of delegated permissions defined for a \
resource application.
            is-enabled: When creating or updating a permission, this property must be set to true (which is the \
default). To delete a permission, this property must first be set to false.  At that point, in a subsequent call, the \
permission may be removed.
            type: Specifies whether this delegated permission should be considered safe for non-admin users to consent \
to on behalf of themselves, or whether an administrator should be required for consent to the permissions. This will \
be the default behavior, but each customer can choose to customize the behavior in their organization (by allowing, \
restricting or limiting user consent to this delegated permission.)
            user-consent-description: A description of the delegated permissions, intended to be read by a user \
granting the permission on their own behalf. This text appears in consent experiences where the user is consenting \
only on behalf of themselves.
            user-consent-display-name: A title for the permission, intended to be read by a user granting the \
permission on their own behalf. This text appears in consent experiences where the user is consenting only on behalf \
of themselves.
            value: Specifies the value to include in the scp (scope) claim in access tokens. Must not exceed 120 \
characters in length. Allowed characters are : ! # $ % & ' ( ) * + , - . / : ;  =  ? @ [ ] ^ + _  {  } ~, as well as \
characters in the ranges 0-9, A-Z and a-z. Any other character, including the space character, are not allowed.

            Multiple actions can be specified by using more than one --oauth2-permission-scopes argument.
      - name: --password-credentials
        short-summary: "The collection of password credentials associated with the service principal. Not nullable."
        long-summary: |
            Usage: --password-credentials custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.

            Multiple actions can be specified by using more than one --password-credentials argument.
      - name: --app-role-assigned-to
        short-summary: "Principals (users, groups, and service principals) that are assigned to this service \
principal. Read-only."
        long-summary: |
            Usage: --app-role-assigned-to app-role-id=XX created-date-time=XX principal-display-name=XX \
principal-id=XX principal-type=XX resource-display-name=XX resource-id=XX deleted-date-time=XX id=XX

            app-role-id: The identifier (id) for the app role which is assigned to the principal. This app role must \
be exposed in the appRoles property on the resource application's service principal (resourceId). If the resource \
application has not declared any app roles, a default app role ID of 00000000-0000-0000-0000-000000000000 can be \
specified to signal that the principal is assigned to the resource app without any specific app roles. Required on \
create. Does not support $filter.
            principal-display-name: The display name of the user, group, or service principal that was granted the app \
role assignment. Read-only. Supports $filter (eq and startswith).
            principal-id: The unique identifier (id) for the user, group or service principal being granted the app \
role. Required on create. Does not support $filter.
            principal-type: The type of the assigned principal. This can either be 'User', 'Group' or \
'ServicePrincipal'. Read-only. Does not support $filter.
            resource-display-name: The display name of the resource app's service principal to which the assignment is \
made. Does not support $filter.
            resource-id: The unique identifier (id) for the resource service principal for which the assignment is \
made. Required on create. Supports $filter (eq only).
            id: Read-only.

            Multiple actions can be specified by using more than one --app-role-assigned-to argument.
      - name: --app-role-assignments
        short-summary: "Applications that this service principal is assigned to. Read-only. Nullable."
        long-summary: |
            Usage: --app-role-assignments app-role-id=XX created-date-time=XX principal-display-name=XX \
principal-id=XX principal-type=XX resource-display-name=XX resource-id=XX deleted-date-time=XX id=XX

            app-role-id: The identifier (id) for the app role which is assigned to the principal. This app role must \
be exposed in the appRoles property on the resource application's service principal (resourceId). If the resource \
application has not declared any app roles, a default app role ID of 00000000-0000-0000-0000-000000000000 can be \
specified to signal that the principal is assigned to the resource app without any specific app roles. Required on \
create. Does not support $filter.
            principal-display-name: The display name of the user, group, or service principal that was granted the app \
role assignment. Read-only. Supports $filter (eq and startswith).
            principal-id: The unique identifier (id) for the user, group or service principal being granted the app \
role. Required on create. Does not support $filter.
            principal-type: The type of the assigned principal. This can either be 'User', 'Group' or \
'ServicePrincipal'. Read-only. Does not support $filter.
            resource-display-name: The display name of the resource app's service principal to which the assignment is \
made. Does not support $filter.
            resource-id: The unique identifier (id) for the resource service principal for which the assignment is \
made. Required on create. Supports $filter (eq only).
            id: Read-only.

            Multiple actions can be specified by using more than one --app-role-assignments argument.
      - name: --claims-mapping-policies
        short-summary: "The claimsMappingPolicies assigned to this service principal."
        long-summary: |
            Usage: --claims-mapping-policies definition=XX is-organization-default=XX applies-to=XX description=XX \
display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --claims-mapping-policies argument.
      - name: --created-objects
        short-summary: "Directory objects created by this service principal. Read-only. Nullable."
        long-summary: |
            Usage: --created-objects deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --created-objects argument.
      - name: --endpoints
        short-summary: "Endpoints available for discovery. Services like Sharepoint populate this property with a \
tenant specific SharePoint endpoints that other applications can discover and use in their experiences."
        long-summary: |
            Usage: --endpoints capability=XX provider-id=XX provider-name=XX provider-resource-id=XX uri=XX \
deleted-date-time=XX id=XX

            capability: Describes the capability that is associated with this resource. (e.g. Messages, Conversations, \
etc.)  Not nullable. Read-only.
            provider-id: Application id of the publishing underlying service. Not nullable. Read-only.
            provider-name: Name of the publishing underlying service. Read-only.
            provider-resource-id: For Microsoft 365 groups, this is set to a well-known name for the resource (e.g. \
Yammer.FeedURL etc.). Not nullable. Read-only.
            uri: URL of the published resource. Not nullable. Read-only.
            id: Read-only.

            Multiple actions can be specified by using more than one --endpoints argument.
      - name: --home-realm-discovery-policies
        short-summary: "The homeRealmDiscoveryPolicies assigned to this service principal."
        long-summary: |
            Usage: --home-realm-discovery-policies definition=XX is-organization-default=XX applies-to=XX \
description=XX display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --home-realm-discovery-policies argument.
      - name: --member-of
        short-summary: "Roles that this service principal is a member of. HTTP Methods: GET Read-only. Nullable."
        long-summary: |
            Usage: --member-of deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --member-of argument.
      - name: --oauth2-permission-grants
        short-summary: "Delegated permission grants authorizing this service principal to access an API on behalf of a \
signed-in user. Read-only. Nullable."
        long-summary: |
            Usage: --oauth2-permission-grants client-id=XX consent-type=XX principal-id=XX resource-id=XX scope=XX \
id=XX

            client-id: The id of the client service principal for the application which is authorized to act on behalf \
of a signed-in user when accessing an API. Required. Supports $filter (eq only).
            consent-type: Indicates if authorization is granted for the client application to impersonate all users or \
only a specific user. AllPrincipals indicates authorization to impersonate all users. Principal indicates \
authorization to impersonate a specific user. Consent on behalf of all users can be granted by an administrator. \
Non-admin users may be authorized to consent on behalf of themselves in some cases, for some delegated permissions. \
Required. Supports $filter (eq only).
            principal-id: The id of the user on behalf of whom the client is authorized to access the resource, when \
consentType is Principal. If consentType is AllPrincipals this value is null. Required when consentType is Principal.
            resource-id: The id of the resource service principal to which access is authorized. This identifies the \
API which the client is authorized to attempt to call on behalf of a signed-in user.
            scope: A space-separated list of the claim values for delegated permissions which should be included in \
access tokens for the resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim \
value should match the value field of one of the delegated permissions defined by the API, listed in the \
publishedPermissionScopes property of the resource service principal.
            id: Read-only.

            Multiple actions can be specified by using more than one --oauth2-permission-grants argument.
      - name: --owned-objects
        short-summary: "Directory objects that are owned by this service principal. Read-only. Nullable."
        long-summary: |
            Usage: --owned-objects deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --owned-objects argument.
      - name: --owners
        short-summary: "Directory objects that are owners of this servicePrincipal. The owners are a set of non-admin \
users or servicePrincipals who are allowed to modify this object. Read-only. Nullable."
        long-summary: |
            Usage: --owners deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --owners argument.
      - name: --token-issuance-policies
        short-summary: "The tokenIssuancePolicies assigned to this service principal."
        long-summary: |
            Usage: --token-issuance-policies definition=XX is-organization-default=XX applies-to=XX description=XX \
display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --token-issuance-policies argument.
      - name: --token-lifetime-policies
        short-summary: "The tokenLifetimePolicies assigned to this service principal."
        long-summary: |
            Usage: --token-lifetime-policies definition=XX is-organization-default=XX applies-to=XX description=XX \
display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --token-lifetime-policies argument.
      - name: --transitive-member-of
        long-summary: |
            Usage: --transitive-member-of deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --transitive-member-of argument.
"""

helps['applications service-principal-service-principal delete-service-principal'] = """
    type: command
    short-summary: "Delete entity from servicePrincipals."
"""

helps['applications service-principal-service-principal list-service-principal'] = """
    type: command
    short-summary: "Get entities from servicePrincipals."
"""

helps['applications service-principal-service-principal show-service-principal'] = """
    type: command
    short-summary: "Get entity from servicePrincipals by key."
"""

helps['applications service-principal-service-principal update-service-principal'] = """
    type: command
    short-summary: "Update entity in servicePrincipals."
    parameters:
      - name: --app-roles
        short-summary: "The roles exposed by the application which this service principal represents. For more \
information see the appRoles property definition on the application entity. Not nullable."
        long-summary: |
            Usage: --app-roles allowed-member-types=XX description=XX display-name=XX id=XX is-enabled=XX origin=XX \
value=XX

            allowed-member-types: Specifies whether this app role can be assigned to users and groups (by setting to \
['User']), to other application's (by setting to ['Application'], or both (by setting to ['User', 'Application']). App \
roles supporting assignment of other applications' service principals are also known as application permissions.
            description: The description for the app role. This is displayed when the app role is being assigned and, \
if the app role functions as an application permission, during  consent experiences.
            display-name: Display name for the permission that appears in the app role assignment and consent \
experiences.
            id: Unique role identifier inside the appRoles collection. When creating a new app role, a new Guid \
identifier must be provided.
            is-enabled: When creating or updating an app role, this must be set to true (which is the default). To \
delete a role, this must first be set to false.  At that point, in a subsequent call, this role may be removed.
            origin: Specifies if the app role is defined on the application object or on the servicePrincipal entity. \
Must not be included in any POST or PATCH requests. Read-only.
            value: Specifies the value to include in the roles claim in ID tokens and access tokens authenticating an \
assigned user or service principal. Must not exceed 120 characters in length. Allowed characters are : ! # $ % & ' ( ) \
* + , - . / : ;  =  ? @ [ ] ^ + _  {  } ~, as well as characters in the ranges 0-9, A-Z and a-z. Any other character, \
including the space character, are not allowed.

            Multiple actions can be specified by using more than one --app-roles argument.
      - name: --info
        short-summary: "informationalUrl"
        long-summary: |
            Usage: --info logo-url=XX marketing-url=XX privacy-statement-url=XX support-url=XX terms-of-service-url=XX

            logo-url: CDN URL to the application's logo, Read-only.
            marketing-url: Link to the application's marketing page. For example, https://www.contoso.com/app/marketing
            privacy-statement-url: Link to the application's privacy statement. For example, \
https://www.contoso.com/app/privacy
            support-url: Link to the application's support page. For example, https://www.contoso.com/app/support
            terms-of-service-url: Link to the application's terms of service statement. For example, \
https://www.contoso.com/app/termsofservice
      - name: --key-credentials
        short-summary: "The collection of key credentials associated with the service principal. Not nullable."
        long-summary: |
            Usage: --key-credentials custom-key-identifier=XX display-name=XX end-date-time=XX key=XX key-id=XX \
start-date-time=XX type=XX usage=XX

            custom-key-identifier: Custom key identifier
            display-name: Friendly name for the key. Optional.
            end-date-time: The date and time at which the credential expires.The Timestamp type represents date and \
time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look \
like this: '2014-01-01T00:00:00Z'
            key: Value for the key credential. Should be a base 64 encoded value.
            key-id: The unique identifier (GUID) for the key.
            start-date-time: The date and time at which the credential becomes valid.The Timestamp type represents \
date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 \
would look like this: '2014-01-01T00:00:00Z'
            type: The type of key credential; for example, 'Symmetric'.
            usage: A string that describes the purpose for which the key can be used; for example, 'Verify'.

            Multiple actions can be specified by using more than one --key-credentials argument.
      - name: --oauth2-permission-scopes
        short-summary: "The delegated permissions exposed by the application. For more information see the \
oauth2PermissionScopes property on the application entity's api property. Not nullable."
        long-summary: |
            Usage: --oauth2-permission-scopes admin-consent-description=XX admin-consent-display-name=XX id=XX \
is-enabled=XX origin=XX type=XX user-consent-description=XX user-consent-display-name=XX value=XX

            admin-consent-description: A description of the delegated permissions, intended to be read by an \
administrator granting the permission on behalf of all users. This text appears in tenant-wide admin consent \
experiences.
            admin-consent-display-name: The permission's title, intended to be read by an administrator granting the \
permission on behalf of all users.
            id: Unique delegated permission identifier inside the collection of delegated permissions defined for a \
resource application.
            is-enabled: When creating or updating a permission, this property must be set to true (which is the \
default). To delete a permission, this property must first be set to false.  At that point, in a subsequent call, the \
permission may be removed.
            type: Specifies whether this delegated permission should be considered safe for non-admin users to consent \
to on behalf of themselves, or whether an administrator should be required for consent to the permissions. This will \
be the default behavior, but each customer can choose to customize the behavior in their organization (by allowing, \
restricting or limiting user consent to this delegated permission.)
            user-consent-description: A description of the delegated permissions, intended to be read by a user \
granting the permission on their own behalf. This text appears in consent experiences where the user is consenting \
only on behalf of themselves.
            user-consent-display-name: A title for the permission, intended to be read by a user granting the \
permission on their own behalf. This text appears in consent experiences where the user is consenting only on behalf \
of themselves.
            value: Specifies the value to include in the scp (scope) claim in access tokens. Must not exceed 120 \
characters in length. Allowed characters are : ! # $ % & ' ( ) * + , - . / : ;  =  ? @ [ ] ^ + _  {  } ~, as well as \
characters in the ranges 0-9, A-Z and a-z. Any other character, including the space character, are not allowed.

            Multiple actions can be specified by using more than one --oauth2-permission-scopes argument.
      - name: --password-credentials
        short-summary: "The collection of password credentials associated with the service principal. Not nullable."
        long-summary: |
            Usage: --password-credentials custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.

            Multiple actions can be specified by using more than one --password-credentials argument.
      - name: --app-role-assigned-to
        short-summary: "Principals (users, groups, and service principals) that are assigned to this service \
principal. Read-only."
        long-summary: |
            Usage: --app-role-assigned-to app-role-id=XX created-date-time=XX principal-display-name=XX \
principal-id=XX principal-type=XX resource-display-name=XX resource-id=XX deleted-date-time=XX id=XX

            app-role-id: The identifier (id) for the app role which is assigned to the principal. This app role must \
be exposed in the appRoles property on the resource application's service principal (resourceId). If the resource \
application has not declared any app roles, a default app role ID of 00000000-0000-0000-0000-000000000000 can be \
specified to signal that the principal is assigned to the resource app without any specific app roles. Required on \
create. Does not support $filter.
            principal-display-name: The display name of the user, group, or service principal that was granted the app \
role assignment. Read-only. Supports $filter (eq and startswith).
            principal-id: The unique identifier (id) for the user, group or service principal being granted the app \
role. Required on create. Does not support $filter.
            principal-type: The type of the assigned principal. This can either be 'User', 'Group' or \
'ServicePrincipal'. Read-only. Does not support $filter.
            resource-display-name: The display name of the resource app's service principal to which the assignment is \
made. Does not support $filter.
            resource-id: The unique identifier (id) for the resource service principal for which the assignment is \
made. Required on create. Supports $filter (eq only).
            id: Read-only.

            Multiple actions can be specified by using more than one --app-role-assigned-to argument.
      - name: --app-role-assignments
        short-summary: "Applications that this service principal is assigned to. Read-only. Nullable."
        long-summary: |
            Usage: --app-role-assignments app-role-id=XX created-date-time=XX principal-display-name=XX \
principal-id=XX principal-type=XX resource-display-name=XX resource-id=XX deleted-date-time=XX id=XX

            app-role-id: The identifier (id) for the app role which is assigned to the principal. This app role must \
be exposed in the appRoles property on the resource application's service principal (resourceId). If the resource \
application has not declared any app roles, a default app role ID of 00000000-0000-0000-0000-000000000000 can be \
specified to signal that the principal is assigned to the resource app without any specific app roles. Required on \
create. Does not support $filter.
            principal-display-name: The display name of the user, group, or service principal that was granted the app \
role assignment. Read-only. Supports $filter (eq and startswith).
            principal-id: The unique identifier (id) for the user, group or service principal being granted the app \
role. Required on create. Does not support $filter.
            principal-type: The type of the assigned principal. This can either be 'User', 'Group' or \
'ServicePrincipal'. Read-only. Does not support $filter.
            resource-display-name: The display name of the resource app's service principal to which the assignment is \
made. Does not support $filter.
            resource-id: The unique identifier (id) for the resource service principal for which the assignment is \
made. Required on create. Supports $filter (eq only).
            id: Read-only.

            Multiple actions can be specified by using more than one --app-role-assignments argument.
      - name: --claims-mapping-policies
        short-summary: "The claimsMappingPolicies assigned to this service principal."
        long-summary: |
            Usage: --claims-mapping-policies definition=XX is-organization-default=XX applies-to=XX description=XX \
display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --claims-mapping-policies argument.
      - name: --created-objects
        short-summary: "Directory objects created by this service principal. Read-only. Nullable."
        long-summary: |
            Usage: --created-objects deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --created-objects argument.
      - name: --endpoints
        short-summary: "Endpoints available for discovery. Services like Sharepoint populate this property with a \
tenant specific SharePoint endpoints that other applications can discover and use in their experiences."
        long-summary: |
            Usage: --endpoints capability=XX provider-id=XX provider-name=XX provider-resource-id=XX uri=XX \
deleted-date-time=XX id=XX

            capability: Describes the capability that is associated with this resource. (e.g. Messages, Conversations, \
etc.)  Not nullable. Read-only.
            provider-id: Application id of the publishing underlying service. Not nullable. Read-only.
            provider-name: Name of the publishing underlying service. Read-only.
            provider-resource-id: For Microsoft 365 groups, this is set to a well-known name for the resource (e.g. \
Yammer.FeedURL etc.). Not nullable. Read-only.
            uri: URL of the published resource. Not nullable. Read-only.
            id: Read-only.

            Multiple actions can be specified by using more than one --endpoints argument.
      - name: --home-realm-discovery-policies
        short-summary: "The homeRealmDiscoveryPolicies assigned to this service principal."
        long-summary: |
            Usage: --home-realm-discovery-policies definition=XX is-organization-default=XX applies-to=XX \
description=XX display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --home-realm-discovery-policies argument.
      - name: --member-of
        short-summary: "Roles that this service principal is a member of. HTTP Methods: GET Read-only. Nullable."
        long-summary: |
            Usage: --member-of deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --member-of argument.
      - name: --oauth2-permission-grants
        short-summary: "Delegated permission grants authorizing this service principal to access an API on behalf of a \
signed-in user. Read-only. Nullable."
        long-summary: |
            Usage: --oauth2-permission-grants client-id=XX consent-type=XX principal-id=XX resource-id=XX scope=XX \
id=XX

            client-id: The id of the client service principal for the application which is authorized to act on behalf \
of a signed-in user when accessing an API. Required. Supports $filter (eq only).
            consent-type: Indicates if authorization is granted for the client application to impersonate all users or \
only a specific user. AllPrincipals indicates authorization to impersonate all users. Principal indicates \
authorization to impersonate a specific user. Consent on behalf of all users can be granted by an administrator. \
Non-admin users may be authorized to consent on behalf of themselves in some cases, for some delegated permissions. \
Required. Supports $filter (eq only).
            principal-id: The id of the user on behalf of whom the client is authorized to access the resource, when \
consentType is Principal. If consentType is AllPrincipals this value is null. Required when consentType is Principal.
            resource-id: The id of the resource service principal to which access is authorized. This identifies the \
API which the client is authorized to attempt to call on behalf of a signed-in user.
            scope: A space-separated list of the claim values for delegated permissions which should be included in \
access tokens for the resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim \
value should match the value field of one of the delegated permissions defined by the API, listed in the \
publishedPermissionScopes property of the resource service principal.
            id: Read-only.

            Multiple actions can be specified by using more than one --oauth2-permission-grants argument.
      - name: --owned-objects
        short-summary: "Directory objects that are owned by this service principal. Read-only. Nullable."
        long-summary: |
            Usage: --owned-objects deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --owned-objects argument.
      - name: --owners
        short-summary: "Directory objects that are owners of this servicePrincipal. The owners are a set of non-admin \
users or servicePrincipals who are allowed to modify this object. Read-only. Nullable."
        long-summary: |
            Usage: --owners deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --owners argument.
      - name: --token-issuance-policies
        short-summary: "The tokenIssuancePolicies assigned to this service principal."
        long-summary: |
            Usage: --token-issuance-policies definition=XX is-organization-default=XX applies-to=XX description=XX \
display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --token-issuance-policies argument.
      - name: --token-lifetime-policies
        short-summary: "The tokenLifetimePolicies assigned to this service principal."
        long-summary: |
            Usage: --token-lifetime-policies definition=XX is-organization-default=XX applies-to=XX description=XX \
display-name=XX deleted-date-time=XX id=XX

            definition: A string collection containing a JSON string that defines the rules and settings for a policy. \
The syntax for the definition differs for each derived policy type. Required.
            is-organization-default: If set to true, activates this policy. There can be many policies for the same \
policy type, but only one can be activated as the organization default. Optional, default value is false.
            description: Description for this policy.
            display-name: Display name for this policy.
            id: Read-only.

            Multiple actions can be specified by using more than one --token-lifetime-policies argument.
      - name: --transitive-member-of
        long-summary: |
            Usage: --transitive-member-of deleted-date-time=XX id=XX

            id: Read-only.

            Multiple actions can be specified by using more than one --transitive-member-of argument.
"""

helps['applications service-principal'] = """
    type: group
    short-summary: Manage service principal with applications_v1_0
"""

helps['applications service-principal add-key'] = """
    type: command
    short-summary: "Invoke action addKey."
    parameters:
      - name: --key-credential
        short-summary: "keyCredential"
        long-summary: |
            Usage: --key-credential custom-key-identifier=XX display-name=XX end-date-time=XX key=XX key-id=XX \
start-date-time=XX type=XX usage=XX

            custom-key-identifier: Custom key identifier
            display-name: Friendly name for the key. Optional.
            end-date-time: The date and time at which the credential expires.The Timestamp type represents date and \
time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look \
like this: '2014-01-01T00:00:00Z'
            key: Value for the key credential. Should be a base 64 encoded value.
            key-id: The unique identifier (GUID) for the key.
            start-date-time: The date and time at which the credential becomes valid.The Timestamp type represents \
date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 \
would look like this: '2014-01-01T00:00:00Z'
            type: The type of key credential; for example, 'Symmetric'.
            usage: A string that describes the purpose for which the key can be used; for example, 'Verify'.
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications service-principal add-password'] = """
    type: command
    short-summary: "Invoke action addPassword."
    parameters:
      - name: --password-credential
        short-summary: "passwordCredential"
        long-summary: |
            Usage: --password-credential custom-key-identifier=XX display-name=XX end-date-time=XX hint=XX key-id=XX \
secret-text=XX start-date-time=XX

            custom-key-identifier: Do not use.
            display-name: Friendly name for the password. Optional.
            end-date-time: The date and time at which the password expires represented using ISO 8601 format and is \
always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Optional.
            hint: Contains the first three characters of the password. Read-only.
            key-id: The unique identifier for the password.
            secret-text: Read-only; Contains the strong passwords generated by Azure AD that are 16-64 characters in \
length. The generated password value is only returned during the initial POST request to addPassword. There is no way \
to retrieve this password in the future.
            start-date-time: The date and time at which the password becomes valid. The Timestamp type represents date \
and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would \
look like this: '2014-01-01T00:00:00Z'. Optional.
"""

helps['applications service-principal check-member-group'] = """
    type: command
    short-summary: "Invoke action checkMemberGroups."
"""

helps['applications service-principal check-member-object'] = """
    type: command
    short-summary: "Invoke action checkMemberObjects."
"""

helps['applications service-principal create-app-role-assigned-to'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignedTo for servicePrincipals."
"""

helps['applications service-principal create-app-role-assignment'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignments for servicePrincipals."
"""

helps['applications service-principal create-endpoint'] = """
    type: command
    short-summary: "Create new navigation property to endpoints for servicePrincipals."
"""

helps['applications service-principal create-ref-claim-mapping-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to claimsMappingPolicies for servicePrincipals."
"""

helps['applications service-principal create-ref-created-object'] = """
    type: command
    short-summary: "Create new navigation property ref to createdObjects for servicePrincipals."
"""

helps['applications service-principal create-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to homeRealmDiscoveryPolicies for servicePrincipals."
"""

helps['applications service-principal create-ref-member-of'] = """
    type: command
    short-summary: "Create new navigation property ref to memberOf for servicePrincipals."
"""

helps['applications service-principal create-ref-oauth2-permission-grant'] = """
    type: command
    short-summary: "Create new navigation property ref to oauth2PermissionGrants for servicePrincipals."
"""

helps['applications service-principal create-ref-owned-object'] = """
    type: command
    short-summary: "Create new navigation property ref to ownedObjects for servicePrincipals."
"""

helps['applications service-principal create-ref-owner'] = """
    type: command
    short-summary: "Create new navigation property ref to owners for servicePrincipals."
"""

helps['applications service-principal create-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenIssuancePolicies for servicePrincipals."
"""

helps['applications service-principal create-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Create new navigation property ref to tokenLifetimePolicies for servicePrincipals."
"""

helps['applications service-principal create-ref-transitive-member-of'] = """
    type: command
    short-summary: "Create new navigation property ref to transitiveMemberOf for servicePrincipals."
"""

helps['applications service-principal delete-app-role-assigned-to'] = """
    type: command
    short-summary: "Delete navigation property appRoleAssignedTo for servicePrincipals."
"""

helps['applications service-principal delete-app-role-assignment'] = """
    type: command
    short-summary: "Delete navigation property appRoleAssignments for servicePrincipals."
"""

helps['applications service-principal delete-endpoint'] = """
    type: command
    short-summary: "Delete navigation property endpoints for servicePrincipals."
"""

helps['applications service-principal delta'] = """
    type: command
    short-summary: "Invoke function delta."
"""

helps['applications service-principal get-available-extension-property'] = """
    type: command
    short-summary: "Invoke action getAvailableExtensionProperties."
"""

helps['applications service-principal get-by-id'] = """
    type: command
    short-summary: "Invoke action getByIds."
"""

helps['applications service-principal get-member-group'] = """
    type: command
    short-summary: "Invoke action getMemberGroups."
"""

helps['applications service-principal get-member-object'] = """
    type: command
    short-summary: "Invoke action getMemberObjects."
"""

helps['applications service-principal list-app-role-assigned-to'] = """
    type: command
    short-summary: "Get appRoleAssignedTo from servicePrincipals."
"""

helps['applications service-principal list-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from servicePrincipals."
"""

helps['applications service-principal list-claim-mapping-policy'] = """
    type: command
    short-summary: "Get claimsMappingPolicies from servicePrincipals."
"""

helps['applications service-principal list-created-object'] = """
    type: command
    short-summary: "Get createdObjects from servicePrincipals."
"""

helps['applications service-principal list-endpoint'] = """
    type: command
    short-summary: "Get endpoints from servicePrincipals."
"""

helps['applications service-principal list-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get homeRealmDiscoveryPolicies from servicePrincipals."
"""

helps['applications service-principal list-member-of'] = """
    type: command
    short-summary: "Get memberOf from servicePrincipals."
"""

helps['applications service-principal list-oauth2-permission-grant'] = """
    type: command
    short-summary: "Get oauth2PermissionGrants from servicePrincipals."
"""

helps['applications service-principal list-owned-object'] = """
    type: command
    short-summary: "Get ownedObjects from servicePrincipals."
"""

helps['applications service-principal list-owner'] = """
    type: command
    short-summary: "Get owners from servicePrincipals."
"""

helps['applications service-principal list-ref-claim-mapping-policy'] = """
    type: command
    short-summary: "Get ref of claimsMappingPolicies from servicePrincipals."
"""

helps['applications service-principal list-ref-created-object'] = """
    type: command
    short-summary: "Get ref of createdObjects from servicePrincipals."
"""

helps['applications service-principal list-ref-home-realm-discovery-policy'] = """
    type: command
    short-summary: "Get ref of homeRealmDiscoveryPolicies from servicePrincipals."
"""

helps['applications service-principal list-ref-member-of'] = """
    type: command
    short-summary: "Get ref of memberOf from servicePrincipals."
"""

helps['applications service-principal list-ref-oauth2-permission-grant'] = """
    type: command
    short-summary: "Get ref of oauth2PermissionGrants from servicePrincipals."
"""

helps['applications service-principal list-ref-owned-object'] = """
    type: command
    short-summary: "Get ref of ownedObjects from servicePrincipals."
"""

helps['applications service-principal list-ref-owner'] = """
    type: command
    short-summary: "Get ref of owners from servicePrincipals."
"""

helps['applications service-principal list-ref-token-issuance-policy'] = """
    type: command
    short-summary: "Get ref of tokenIssuancePolicies from servicePrincipals."
"""

helps['applications service-principal list-ref-token-lifetime-policy'] = """
    type: command
    short-summary: "Get ref of tokenLifetimePolicies from servicePrincipals."
"""

helps['applications service-principal list-ref-transitive-member-of'] = """
    type: command
    short-summary: "Get ref of transitiveMemberOf from servicePrincipals."
"""

helps['applications service-principal list-token-issuance-policy'] = """
    type: command
    short-summary: "Get tokenIssuancePolicies from servicePrincipals."
"""

helps['applications service-principal list-token-lifetime-policy'] = """
    type: command
    short-summary: "Get tokenLifetimePolicies from servicePrincipals."
"""

helps['applications service-principal list-transitive-member-of'] = """
    type: command
    short-summary: "Get transitiveMemberOf from servicePrincipals."
"""

helps['applications service-principal remove-key'] = """
    type: command
    short-summary: "Invoke action removeKey."
"""

helps['applications service-principal remove-password'] = """
    type: command
    short-summary: "Invoke action removePassword."
"""

helps['applications service-principal restore'] = """
    type: command
    short-summary: "Invoke action restore."
"""

helps['applications service-principal show-app-role-assigned-to'] = """
    type: command
    short-summary: "Get appRoleAssignedTo from servicePrincipals."
"""

helps['applications service-principal show-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from servicePrincipals."
"""

helps['applications service-principal show-endpoint'] = """
    type: command
    short-summary: "Get endpoints from servicePrincipals."
"""

helps['applications service-principal update-app-role-assigned-to'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignedTo in servicePrincipals."
"""

helps['applications service-principal update-app-role-assignment'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignments in servicePrincipals."
"""

helps['applications service-principal update-endpoint'] = """
    type: command
    short-summary: "Update the navigation property endpoints in servicePrincipals."
"""

helps['applications service-principal validate-property'] = """
    type: command
    short-summary: "Invoke action validateProperties."
"""

helps['applications user'] = """
    type: group
    short-summary: Manage user with applications_v1_0
"""

helps['applications user create-app-role-assignment'] = """
    type: command
    short-summary: "Create new navigation property to appRoleAssignments for users."
"""

helps['applications user delete-app-role-assignment'] = """
    type: command
    short-summary: "Delete navigation property appRoleAssignments for users."
"""

helps['applications user list-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from users."
"""

helps['applications user show-app-role-assignment'] = """
    type: command
    short-summary: "Get appRoleAssignments from users."
"""

helps['applications user update-app-role-assignment'] = """
    type: command
    short-summary: "Update the navigation property appRoleAssignments in users."
"""
