# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines


def planner_group_delete_planner(client,
                                 group_id,
                                 if_match=None):
    return client.delete_planner(group_id=group_id,
                                 if_match=if_match)


def planner_group_show_planner(client,
                               group_id,
                               select=None,
                               expand=None):
    return client.get_planner(group_id=group_id,
                              select=select,
                              expand=expand)


def planner_group_update_planner(client,
                                 group_id,
                                 id_=None,
                                 plans=None):
    body = {}
    body['id'] = id_
    body['plans'] = plans
    return client.update_planner(group_id=group_id,
                                 body=body)


def planner_group_planner_create_plan(client,
                                      group_id,
                                      id_=None,
                                      contexts=None,
                                      created_date_time=None,
                                      owner=None,
                                      title=None,
                                      buckets=None,
                                      tasks=None,
                                      microsoft_graph_entity_id=None,
                                      category_descriptions=None,
                                      context_details=None,
                                      shared_with=None,
                                      application=None,
                                      device=None,
                                      user=None):
    body = {}
    body['id'] = id_
    body['contexts'] = contexts
    body['created_date_time'] = created_date_time
    body['owner'] = owner
    body['title'] = title
    body['buckets'] = buckets
    body['tasks'] = tasks
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['category_descriptions'] = category_descriptions
    body['details']['context_details'] = context_details
    body['details']['shared_with'] = shared_with
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    return client.create_plans(group_id=group_id,
                               body=body)


def planner_group_planner_delete_plan(client,
                                      group_id,
                                      planner_plan_id,
                                      if_match=None):
    return client.delete_plans(group_id=group_id,
                               planner_plan_id=planner_plan_id,
                               if_match=if_match)


def planner_group_planner_list_plan(client,
                                    group_id,
                                    orderby=None,
                                    select=None,
                                    expand=None):
    return client.list_plans(group_id=group_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def planner_group_planner_show_plan(client,
                                    group_id,
                                    planner_plan_id,
                                    select=None,
                                    expand=None):
    return client.get_plans(group_id=group_id,
                            planner_plan_id=planner_plan_id,
                            select=select,
                            expand=expand)


def planner_group_planner_update_plan(client,
                                      group_id,
                                      planner_plan_id,
                                      id_=None,
                                      contexts=None,
                                      created_date_time=None,
                                      owner=None,
                                      title=None,
                                      buckets=None,
                                      tasks=None,
                                      microsoft_graph_entity_id=None,
                                      category_descriptions=None,
                                      context_details=None,
                                      shared_with=None,
                                      application=None,
                                      device=None,
                                      user=None):
    body = {}
    body['id'] = id_
    body['contexts'] = contexts
    body['created_date_time'] = created_date_time
    body['owner'] = owner
    body['title'] = title
    body['buckets'] = buckets
    body['tasks'] = tasks
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['category_descriptions'] = category_descriptions
    body['details']['context_details'] = context_details
    body['details']['shared_with'] = shared_with
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    return client.update_plans(group_id=group_id,
                               planner_plan_id=planner_plan_id,
                               body=body)


def planner_group_planner_plan_create_bucket(client,
                                             group_id,
                                             planner_plan_id,
                                             id_=None,
                                             name=None,
                                             order_hint=None,
                                             plan_id=None,
                                             tasks=None):
    body = {}
    body['id'] = id_
    body['name'] = name
    body['order_hint'] = order_hint
    body['plan_id'] = plan_id
    body['tasks'] = tasks
    return client.create_buckets(group_id=group_id,
                                 planner_plan_id=planner_plan_id,
                                 body=body)


def planner_group_planner_plan_create_task(client,
                                           group_id,
                                           planner_plan_id,
                                           id_=None,
                                           active_checklist_item_count=None,
                                           applied_categories=None,
                                           assignee_priority=None,
                                           assignments=None,
                                           bucket_id=None,
                                           checklist_item_count=None,
                                           completed_date_time=None,
                                           conversation_thread_id=None,
                                           created_date_time=None,
                                           due_date_time=None,
                                           has_description=None,
                                           order_hint=None,
                                           percent_complete=None,
                                           plan_id=None,
                                           preview_type=None,
                                           priority=None,
                                           reference_count=None,
                                           start_date_time=None,
                                           title=None,
                                           bucket_task_board_format=None,
                                           progress_task_board_format=None,
                                           microsoft_graph_entity_id=None,
                                           checklist=None,
                                           description=None,
                                           microsoft_graph_planner_preview_type=None,
                                           references=None,
                                           id1=None,
                                           order_hints_by_assignee=None,
                                           unassigned_order_hint=None,
                                           application=None,
                                           device=None,
                                           user=None,
                                           microsoft_graph_identity_application=None,
                                           microsoft_graph_identity_device=None,
                                           microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.create_tasks(group_id=group_id,
                               planner_plan_id=planner_plan_id,
                               body=body)


def planner_group_planner_plan_delete_bucket(client,
                                             group_id,
                                             planner_plan_id,
                                             planner_bucket_id,
                                             if_match=None):
    return client.delete_buckets(group_id=group_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 if_match=if_match)


def planner_group_planner_plan_delete_detail(client,
                                             group_id,
                                             planner_plan_id,
                                             if_match=None):
    return client.delete_details(group_id=group_id,
                                 planner_plan_id=planner_plan_id,
                                 if_match=if_match)


def planner_group_planner_plan_delete_task(client,
                                           group_id,
                                           planner_plan_id,
                                           planner_task_id,
                                           if_match=None):
    return client.delete_tasks(group_id=group_id,
                               planner_plan_id=planner_plan_id,
                               planner_task_id=planner_task_id,
                               if_match=if_match)


def planner_group_planner_plan_list_bucket(client,
                                           group_id,
                                           planner_plan_id,
                                           orderby=None,
                                           select=None,
                                           expand=None):
    return client.list_buckets(group_id=group_id,
                               planner_plan_id=planner_plan_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def planner_group_planner_plan_list_task(client,
                                         group_id,
                                         planner_plan_id,
                                         orderby=None,
                                         select=None,
                                         expand=None):
    return client.list_tasks(group_id=group_id,
                             planner_plan_id=planner_plan_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def planner_group_planner_plan_show_bucket(client,
                                           group_id,
                                           planner_plan_id,
                                           planner_bucket_id,
                                           select=None,
                                           expand=None):
    return client.get_buckets(group_id=group_id,
                              planner_plan_id=planner_plan_id,
                              planner_bucket_id=planner_bucket_id,
                              select=select,
                              expand=expand)


def planner_group_planner_plan_show_detail(client,
                                           group_id,
                                           planner_plan_id,
                                           select=None,
                                           expand=None):
    return client.get_details(group_id=group_id,
                              planner_plan_id=planner_plan_id,
                              select=select,
                              expand=expand)


def planner_group_planner_plan_show_task(client,
                                         group_id,
                                         planner_plan_id,
                                         planner_task_id,
                                         select=None,
                                         expand=None):
    return client.get_tasks(group_id=group_id,
                            planner_plan_id=planner_plan_id,
                            planner_task_id=planner_task_id,
                            select=select,
                            expand=expand)


def planner_group_planner_plan_update_bucket(client,
                                             group_id,
                                             planner_plan_id,
                                             planner_bucket_id,
                                             id_=None,
                                             name=None,
                                             order_hint=None,
                                             plan_id=None,
                                             tasks=None):
    body = {}
    body['id'] = id_
    body['name'] = name
    body['order_hint'] = order_hint
    body['plan_id'] = plan_id
    body['tasks'] = tasks
    return client.update_buckets(group_id=group_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 body=body)


def planner_group_planner_plan_update_detail(client,
                                             group_id,
                                             planner_plan_id,
                                             id_=None,
                                             category_descriptions=None,
                                             context_details=None,
                                             shared_with=None):
    body = {}
    body['id'] = id_
    body['category_descriptions'] = category_descriptions
    body['context_details'] = context_details
    body['shared_with'] = shared_with
    return client.update_details(group_id=group_id,
                                 planner_plan_id=planner_plan_id,
                                 body=body)


def planner_group_planner_plan_update_task(client,
                                           group_id,
                                           planner_plan_id,
                                           planner_task_id,
                                           id_=None,
                                           active_checklist_item_count=None,
                                           applied_categories=None,
                                           assignee_priority=None,
                                           assignments=None,
                                           bucket_id=None,
                                           checklist_item_count=None,
                                           completed_date_time=None,
                                           conversation_thread_id=None,
                                           created_date_time=None,
                                           due_date_time=None,
                                           has_description=None,
                                           order_hint=None,
                                           percent_complete=None,
                                           plan_id=None,
                                           preview_type=None,
                                           priority=None,
                                           reference_count=None,
                                           start_date_time=None,
                                           title=None,
                                           bucket_task_board_format=None,
                                           progress_task_board_format=None,
                                           microsoft_graph_entity_id=None,
                                           checklist=None,
                                           description=None,
                                           microsoft_graph_planner_preview_type=None,
                                           references=None,
                                           id1=None,
                                           order_hints_by_assignee=None,
                                           unassigned_order_hint=None,
                                           application=None,
                                           device=None,
                                           user=None,
                                           microsoft_graph_identity_application=None,
                                           microsoft_graph_identity_device=None,
                                           microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.update_tasks(group_id=group_id,
                               planner_plan_id=planner_plan_id,
                               planner_task_id=planner_task_id,
                               body=body)


def planner_group_planner_plan_bucket_create_task(client,
                                                  group_id,
                                                  planner_plan_id,
                                                  planner_bucket_id,
                                                  id_=None,
                                                  active_checklist_item_count=None,
                                                  applied_categories=None,
                                                  assignee_priority=None,
                                                  assignments=None,
                                                  bucket_id=None,
                                                  checklist_item_count=None,
                                                  completed_date_time=None,
                                                  conversation_thread_id=None,
                                                  created_date_time=None,
                                                  due_date_time=None,
                                                  has_description=None,
                                                  order_hint=None,
                                                  percent_complete=None,
                                                  plan_id=None,
                                                  preview_type=None,
                                                  priority=None,
                                                  reference_count=None,
                                                  start_date_time=None,
                                                  title=None,
                                                  bucket_task_board_format=None,
                                                  progress_task_board_format=None,
                                                  microsoft_graph_entity_id=None,
                                                  checklist=None,
                                                  description=None,
                                                  microsoft_graph_planner_preview_type=None,
                                                  references=None,
                                                  id1=None,
                                                  order_hints_by_assignee=None,
                                                  unassigned_order_hint=None,
                                                  application=None,
                                                  device=None,
                                                  user=None,
                                                  microsoft_graph_identity_application=None,
                                                  microsoft_graph_identity_device=None,
                                                  microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.create_tasks(group_id=group_id,
                               planner_plan_id=planner_plan_id,
                               planner_bucket_id=planner_bucket_id,
                               body=body)


def planner_group_planner_plan_bucket_delete_task(client,
                                                  group_id,
                                                  planner_plan_id,
                                                  planner_bucket_id,
                                                  planner_task_id,
                                                  if_match=None):
    return client.delete_tasks(group_id=group_id,
                               planner_plan_id=planner_plan_id,
                               planner_bucket_id=planner_bucket_id,
                               planner_task_id=planner_task_id,
                               if_match=if_match)


def planner_group_planner_plan_bucket_list_task(client,
                                                group_id,
                                                planner_plan_id,
                                                planner_bucket_id,
                                                orderby=None,
                                                select=None,
                                                expand=None):
    return client.list_tasks(group_id=group_id,
                             planner_plan_id=planner_plan_id,
                             planner_bucket_id=planner_bucket_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def planner_group_planner_plan_bucket_show_task(client,
                                                group_id,
                                                planner_plan_id,
                                                planner_bucket_id,
                                                planner_task_id,
                                                select=None,
                                                expand=None):
    return client.get_tasks(group_id=group_id,
                            planner_plan_id=planner_plan_id,
                            planner_bucket_id=planner_bucket_id,
                            planner_task_id=planner_task_id,
                            select=select,
                            expand=expand)


def planner_group_planner_plan_bucket_update_task(client,
                                                  group_id,
                                                  planner_plan_id,
                                                  planner_bucket_id,
                                                  planner_task_id,
                                                  id_=None,
                                                  active_checklist_item_count=None,
                                                  applied_categories=None,
                                                  assignee_priority=None,
                                                  assignments=None,
                                                  bucket_id=None,
                                                  checklist_item_count=None,
                                                  completed_date_time=None,
                                                  conversation_thread_id=None,
                                                  created_date_time=None,
                                                  due_date_time=None,
                                                  has_description=None,
                                                  order_hint=None,
                                                  percent_complete=None,
                                                  plan_id=None,
                                                  preview_type=None,
                                                  priority=None,
                                                  reference_count=None,
                                                  start_date_time=None,
                                                  title=None,
                                                  bucket_task_board_format=None,
                                                  progress_task_board_format=None,
                                                  microsoft_graph_entity_id=None,
                                                  checklist=None,
                                                  description=None,
                                                  microsoft_graph_planner_preview_type=None,
                                                  references=None,
                                                  id1=None,
                                                  order_hints_by_assignee=None,
                                                  unassigned_order_hint=None,
                                                  application=None,
                                                  device=None,
                                                  user=None,
                                                  microsoft_graph_identity_application=None,
                                                  microsoft_graph_identity_device=None,
                                                  microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.update_tasks(group_id=group_id,
                               planner_plan_id=planner_plan_id,
                               planner_bucket_id=planner_bucket_id,
                               planner_task_id=planner_task_id,
                               body=body)


def planner_group_planner_plan_bucket_task_delete_assigned_to_task_board_format(client,
                                                                                group_id,
                                                                                planner_plan_id,
                                                                                planner_bucket_id,
                                                                                planner_task_id,
                                                                                if_match=None):
    return client.delete_assigned_to_task_board_format(group_id=group_id,
                                                       planner_plan_id=planner_plan_id,
                                                       planner_bucket_id=planner_bucket_id,
                                                       planner_task_id=planner_task_id,
                                                       if_match=if_match)


def planner_group_planner_plan_bucket_task_delete_bucket_task_board_format(client,
                                                                           group_id,
                                                                           planner_plan_id,
                                                                           planner_bucket_id,
                                                                           planner_task_id,
                                                                           if_match=None):
    return client.delete_bucket_task_board_format(group_id=group_id,
                                                  planner_plan_id=planner_plan_id,
                                                  planner_bucket_id=planner_bucket_id,
                                                  planner_task_id=planner_task_id,
                                                  if_match=if_match)


def planner_group_planner_plan_bucket_task_delete_detail(client,
                                                         group_id,
                                                         planner_plan_id,
                                                         planner_bucket_id,
                                                         planner_task_id,
                                                         if_match=None):
    return client.delete_details(group_id=group_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 planner_task_id=planner_task_id,
                                 if_match=if_match)


def planner_group_planner_plan_bucket_task_delete_progress_task_board_format(client,
                                                                             group_id,
                                                                             planner_plan_id,
                                                                             planner_bucket_id,
                                                                             planner_task_id,
                                                                             if_match=None):
    return client.delete_progress_task_board_format(group_id=group_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    if_match=if_match)


def planner_group_planner_plan_bucket_task_show_assigned_to_task_board_format(client,
                                                                              group_id,
                                                                              planner_plan_id,
                                                                              planner_bucket_id,
                                                                              planner_task_id,
                                                                              select=None,
                                                                              expand=None):
    return client.get_assigned_to_task_board_format(group_id=group_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    select=select,
                                                    expand=expand)


def planner_group_planner_plan_bucket_task_show_bucket_task_board_format(client,
                                                                         group_id,
                                                                         planner_plan_id,
                                                                         planner_bucket_id,
                                                                         planner_task_id,
                                                                         select=None,
                                                                         expand=None):
    return client.get_bucket_task_board_format(group_id=group_id,
                                               planner_plan_id=planner_plan_id,
                                               planner_bucket_id=planner_bucket_id,
                                               planner_task_id=planner_task_id,
                                               select=select,
                                               expand=expand)


def planner_group_planner_plan_bucket_task_show_detail(client,
                                                       group_id,
                                                       planner_plan_id,
                                                       planner_bucket_id,
                                                       planner_task_id,
                                                       select=None,
                                                       expand=None):
    return client.get_details(group_id=group_id,
                              planner_plan_id=planner_plan_id,
                              planner_bucket_id=planner_bucket_id,
                              planner_task_id=planner_task_id,
                              select=select,
                              expand=expand)


def planner_group_planner_plan_bucket_task_show_progress_task_board_format(client,
                                                                           group_id,
                                                                           planner_plan_id,
                                                                           planner_bucket_id,
                                                                           planner_task_id,
                                                                           select=None,
                                                                           expand=None):
    return client.get_progress_task_board_format(group_id=group_id,
                                                 planner_plan_id=planner_plan_id,
                                                 planner_bucket_id=planner_bucket_id,
                                                 planner_task_id=planner_task_id,
                                                 select=select,
                                                 expand=expand)


def planner_group_planner_plan_bucket_task_update_assigned_to_task_board_format(client,
                                                                                group_id,
                                                                                planner_plan_id,
                                                                                planner_bucket_id,
                                                                                planner_task_id,
                                                                                id_=None,
                                                                                order_hints_by_assignee=None,
                                                                                unassigned_order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hints_by_assignee'] = order_hints_by_assignee
    body['unassigned_order_hint'] = unassigned_order_hint
    return client.update_assigned_to_task_board_format(group_id=group_id,
                                                       planner_plan_id=planner_plan_id,
                                                       planner_bucket_id=planner_bucket_id,
                                                       planner_task_id=planner_task_id,
                                                       body=body)


def planner_group_planner_plan_bucket_task_update_bucket_task_board_format(client,
                                                                           group_id,
                                                                           planner_plan_id,
                                                                           planner_bucket_id,
                                                                           planner_task_id,
                                                                           id_=None,
                                                                           order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_bucket_task_board_format(group_id=group_id,
                                                  planner_plan_id=planner_plan_id,
                                                  planner_bucket_id=planner_bucket_id,
                                                  planner_task_id=planner_task_id,
                                                  body=body)


def planner_group_planner_plan_bucket_task_update_detail(client,
                                                         group_id,
                                                         planner_plan_id,
                                                         planner_bucket_id,
                                                         planner_task_id,
                                                         id_=None,
                                                         checklist=None,
                                                         description=None,
                                                         preview_type=None,
                                                         references=None):
    body = {}
    body['id'] = id_
    body['checklist'] = checklist
    body['description'] = description
    body['preview_type'] = preview_type
    body['references'] = references
    return client.update_details(group_id=group_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 planner_task_id=planner_task_id,
                                 body=body)


def planner_group_planner_plan_bucket_task_update_progress_task_board_format(client,
                                                                             group_id,
                                                                             planner_plan_id,
                                                                             planner_bucket_id,
                                                                             planner_task_id,
                                                                             id_=None,
                                                                             order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_progress_task_board_format(group_id=group_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    body=body)


def planner_group_planner_plan_task_delete_assigned_to_task_board_format(client,
                                                                         group_id,
                                                                         planner_plan_id,
                                                                         planner_task_id,
                                                                         if_match=None):
    return client.delete_assigned_to_task_board_format(group_id=group_id,
                                                       planner_plan_id=planner_plan_id,
                                                       planner_task_id=planner_task_id,
                                                       if_match=if_match)


def planner_group_planner_plan_task_delete_bucket_task_board_format(client,
                                                                    group_id,
                                                                    planner_plan_id,
                                                                    planner_task_id,
                                                                    if_match=None):
    return client.delete_bucket_task_board_format(group_id=group_id,
                                                  planner_plan_id=planner_plan_id,
                                                  planner_task_id=planner_task_id,
                                                  if_match=if_match)


def planner_group_planner_plan_task_delete_detail(client,
                                                  group_id,
                                                  planner_plan_id,
                                                  planner_task_id,
                                                  if_match=None):
    return client.delete_details(group_id=group_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_task_id=planner_task_id,
                                 if_match=if_match)


def planner_group_planner_plan_task_delete_progress_task_board_format(client,
                                                                      group_id,
                                                                      planner_plan_id,
                                                                      planner_task_id,
                                                                      if_match=None):
    return client.delete_progress_task_board_format(group_id=group_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_task_id=planner_task_id,
                                                    if_match=if_match)


def planner_group_planner_plan_task_show_assigned_to_task_board_format(client,
                                                                       group_id,
                                                                       planner_plan_id,
                                                                       planner_task_id,
                                                                       select=None,
                                                                       expand=None):
    return client.get_assigned_to_task_board_format(group_id=group_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_task_id=planner_task_id,
                                                    select=select,
                                                    expand=expand)


def planner_group_planner_plan_task_show_bucket_task_board_format(client,
                                                                  group_id,
                                                                  planner_plan_id,
                                                                  planner_task_id,
                                                                  select=None,
                                                                  expand=None):
    return client.get_bucket_task_board_format(group_id=group_id,
                                               planner_plan_id=planner_plan_id,
                                               planner_task_id=planner_task_id,
                                               select=select,
                                               expand=expand)


def planner_group_planner_plan_task_show_detail(client,
                                                group_id,
                                                planner_plan_id,
                                                planner_task_id,
                                                select=None,
                                                expand=None):
    return client.get_details(group_id=group_id,
                              planner_plan_id=planner_plan_id,
                              planner_task_id=planner_task_id,
                              select=select,
                              expand=expand)


def planner_group_planner_plan_task_show_progress_task_board_format(client,
                                                                    group_id,
                                                                    planner_plan_id,
                                                                    planner_task_id,
                                                                    select=None,
                                                                    expand=None):
    return client.get_progress_task_board_format(group_id=group_id,
                                                 planner_plan_id=planner_plan_id,
                                                 planner_task_id=planner_task_id,
                                                 select=select,
                                                 expand=expand)


def planner_group_planner_plan_task_update_assigned_to_task_board_format(client,
                                                                         group_id,
                                                                         planner_plan_id,
                                                                         planner_task_id,
                                                                         id_=None,
                                                                         order_hints_by_assignee=None,
                                                                         unassigned_order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hints_by_assignee'] = order_hints_by_assignee
    body['unassigned_order_hint'] = unassigned_order_hint
    return client.update_assigned_to_task_board_format(group_id=group_id,
                                                       planner_plan_id=planner_plan_id,
                                                       planner_task_id=planner_task_id,
                                                       body=body)


def planner_group_planner_plan_task_update_bucket_task_board_format(client,
                                                                    group_id,
                                                                    planner_plan_id,
                                                                    planner_task_id,
                                                                    id_=None,
                                                                    order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_bucket_task_board_format(group_id=group_id,
                                                  planner_plan_id=planner_plan_id,
                                                  planner_task_id=planner_task_id,
                                                  body=body)


def planner_group_planner_plan_task_update_detail(client,
                                                  group_id,
                                                  planner_plan_id,
                                                  planner_task_id,
                                                  id_=None,
                                                  checklist=None,
                                                  description=None,
                                                  preview_type=None,
                                                  references=None):
    body = {}
    body['id'] = id_
    body['checklist'] = checklist
    body['description'] = description
    body['preview_type'] = preview_type
    body['references'] = references
    return client.update_details(group_id=group_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_task_id=planner_task_id,
                                 body=body)


def planner_group_planner_plan_task_update_progress_task_board_format(client,
                                                                      group_id,
                                                                      planner_plan_id,
                                                                      planner_task_id,
                                                                      id_=None,
                                                                      order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_progress_task_board_format(group_id=group_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_task_id=planner_task_id,
                                                    body=body)


def planner_planner_update(client,
                           id_=None,
                           buckets=None,
                           plans=None,
                           tasks=None):
    body = {}
    body['id'] = id_
    body['buckets'] = buckets
    body['plans'] = plans
    body['tasks'] = tasks
    return client.update_planner(body=body)


def planner_planner_show_planner(client,
                                 select=None,
                                 expand=None):
    return client.get_planner(select=select,
                              expand=expand)


def planner_planner_create_bucket(client,
                                  id_=None,
                                  name=None,
                                  order_hint=None,
                                  plan_id=None,
                                  tasks=None):
    body = {}
    body['id'] = id_
    body['name'] = name
    body['order_hint'] = order_hint
    body['plan_id'] = plan_id
    body['tasks'] = tasks
    return client.create_buckets(body=body)


def planner_planner_create_plan(client,
                                id_=None,
                                contexts=None,
                                created_date_time=None,
                                owner=None,
                                title=None,
                                buckets=None,
                                tasks=None,
                                microsoft_graph_entity_id=None,
                                category_descriptions=None,
                                context_details=None,
                                shared_with=None,
                                application=None,
                                device=None,
                                user=None):
    body = {}
    body['id'] = id_
    body['contexts'] = contexts
    body['created_date_time'] = created_date_time
    body['owner'] = owner
    body['title'] = title
    body['buckets'] = buckets
    body['tasks'] = tasks
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['category_descriptions'] = category_descriptions
    body['details']['context_details'] = context_details
    body['details']['shared_with'] = shared_with
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    return client.create_plans(body=body)


def planner_planner_create_task(client,
                                id_=None,
                                active_checklist_item_count=None,
                                applied_categories=None,
                                assignee_priority=None,
                                assignments=None,
                                bucket_id=None,
                                checklist_item_count=None,
                                completed_date_time=None,
                                conversation_thread_id=None,
                                created_date_time=None,
                                due_date_time=None,
                                has_description=None,
                                order_hint=None,
                                percent_complete=None,
                                plan_id=None,
                                preview_type=None,
                                priority=None,
                                reference_count=None,
                                start_date_time=None,
                                title=None,
                                bucket_task_board_format=None,
                                progress_task_board_format=None,
                                microsoft_graph_entity_id=None,
                                checklist=None,
                                description=None,
                                microsoft_graph_planner_preview_type=None,
                                references=None,
                                id1=None,
                                order_hints_by_assignee=None,
                                unassigned_order_hint=None,
                                application=None,
                                device=None,
                                user=None,
                                microsoft_graph_identity_application=None,
                                microsoft_graph_identity_device=None,
                                microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.create_tasks(body=body)


def planner_planner_delete_bucket(client,
                                  planner_bucket_id,
                                  if_match=None):
    return client.delete_buckets(planner_bucket_id=planner_bucket_id,
                                 if_match=if_match)


def planner_planner_delete_plan(client,
                                planner_plan_id,
                                if_match=None):
    return client.delete_plans(planner_plan_id=planner_plan_id,
                               if_match=if_match)


def planner_planner_delete_task(client,
                                planner_task_id,
                                if_match=None):
    return client.delete_tasks(planner_task_id=planner_task_id,
                               if_match=if_match)


def planner_planner_list_bucket(client,
                                orderby=None,
                                select=None,
                                expand=None):
    return client.list_buckets(orderby=orderby,
                               select=select,
                               expand=expand)


def planner_planner_list_plan(client,
                              orderby=None,
                              select=None,
                              expand=None):
    return client.list_plans(orderby=orderby,
                             select=select,
                             expand=expand)


def planner_planner_list_task(client,
                              orderby=None,
                              select=None,
                              expand=None):
    return client.list_tasks(orderby=orderby,
                             select=select,
                             expand=expand)


def planner_planner_show_bucket(client,
                                planner_bucket_id,
                                select=None,
                                expand=None):
    return client.get_buckets(planner_bucket_id=planner_bucket_id,
                              select=select,
                              expand=expand)


def planner_planner_show_plan(client,
                              planner_plan_id,
                              select=None,
                              expand=None):
    return client.get_plans(planner_plan_id=planner_plan_id,
                            select=select,
                            expand=expand)


def planner_planner_show_task(client,
                              planner_task_id,
                              select=None,
                              expand=None):
    return client.get_tasks(planner_task_id=planner_task_id,
                            select=select,
                            expand=expand)


def planner_planner_update_bucket(client,
                                  planner_bucket_id,
                                  id_=None,
                                  name=None,
                                  order_hint=None,
                                  plan_id=None,
                                  tasks=None):
    body = {}
    body['id'] = id_
    body['name'] = name
    body['order_hint'] = order_hint
    body['plan_id'] = plan_id
    body['tasks'] = tasks
    return client.update_buckets(planner_bucket_id=planner_bucket_id,
                                 body=body)


def planner_planner_update_plan(client,
                                planner_plan_id,
                                id_=None,
                                contexts=None,
                                created_date_time=None,
                                owner=None,
                                title=None,
                                buckets=None,
                                tasks=None,
                                microsoft_graph_entity_id=None,
                                category_descriptions=None,
                                context_details=None,
                                shared_with=None,
                                application=None,
                                device=None,
                                user=None):
    body = {}
    body['id'] = id_
    body['contexts'] = contexts
    body['created_date_time'] = created_date_time
    body['owner'] = owner
    body['title'] = title
    body['buckets'] = buckets
    body['tasks'] = tasks
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['category_descriptions'] = category_descriptions
    body['details']['context_details'] = context_details
    body['details']['shared_with'] = shared_with
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    return client.update_plans(planner_plan_id=planner_plan_id,
                               body=body)


def planner_planner_update_task(client,
                                planner_task_id,
                                id_=None,
                                active_checklist_item_count=None,
                                applied_categories=None,
                                assignee_priority=None,
                                assignments=None,
                                bucket_id=None,
                                checklist_item_count=None,
                                completed_date_time=None,
                                conversation_thread_id=None,
                                created_date_time=None,
                                due_date_time=None,
                                has_description=None,
                                order_hint=None,
                                percent_complete=None,
                                plan_id=None,
                                preview_type=None,
                                priority=None,
                                reference_count=None,
                                start_date_time=None,
                                title=None,
                                bucket_task_board_format=None,
                                progress_task_board_format=None,
                                microsoft_graph_entity_id=None,
                                checklist=None,
                                description=None,
                                microsoft_graph_planner_preview_type=None,
                                references=None,
                                id1=None,
                                order_hints_by_assignee=None,
                                unassigned_order_hint=None,
                                application=None,
                                device=None,
                                user=None,
                                microsoft_graph_identity_application=None,
                                microsoft_graph_identity_device=None,
                                microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.update_tasks(planner_task_id=planner_task_id,
                               body=body)


def planner_planner_bucket_create_task(client,
                                       planner_bucket_id,
                                       id_=None,
                                       active_checklist_item_count=None,
                                       applied_categories=None,
                                       assignee_priority=None,
                                       assignments=None,
                                       bucket_id=None,
                                       checklist_item_count=None,
                                       completed_date_time=None,
                                       conversation_thread_id=None,
                                       created_date_time=None,
                                       due_date_time=None,
                                       has_description=None,
                                       order_hint=None,
                                       percent_complete=None,
                                       plan_id=None,
                                       preview_type=None,
                                       priority=None,
                                       reference_count=None,
                                       start_date_time=None,
                                       title=None,
                                       bucket_task_board_format=None,
                                       progress_task_board_format=None,
                                       microsoft_graph_entity_id=None,
                                       checklist=None,
                                       description=None,
                                       microsoft_graph_planner_preview_type=None,
                                       references=None,
                                       id1=None,
                                       order_hints_by_assignee=None,
                                       unassigned_order_hint=None,
                                       application=None,
                                       device=None,
                                       user=None,
                                       microsoft_graph_identity_application=None,
                                       microsoft_graph_identity_device=None,
                                       microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.create_tasks(planner_bucket_id=planner_bucket_id,
                               body=body)


def planner_planner_bucket_delete_task(client,
                                       planner_bucket_id,
                                       planner_task_id,
                                       if_match=None):
    return client.delete_tasks(planner_bucket_id=planner_bucket_id,
                               planner_task_id=planner_task_id,
                               if_match=if_match)


def planner_planner_bucket_list_task(client,
                                     planner_bucket_id,
                                     orderby=None,
                                     select=None,
                                     expand=None):
    return client.list_tasks(planner_bucket_id=planner_bucket_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def planner_planner_bucket_show_task(client,
                                     planner_bucket_id,
                                     planner_task_id,
                                     select=None,
                                     expand=None):
    return client.get_tasks(planner_bucket_id=planner_bucket_id,
                            planner_task_id=planner_task_id,
                            select=select,
                            expand=expand)


def planner_planner_bucket_update_task(client,
                                       planner_bucket_id,
                                       planner_task_id,
                                       id_=None,
                                       active_checklist_item_count=None,
                                       applied_categories=None,
                                       assignee_priority=None,
                                       assignments=None,
                                       bucket_id=None,
                                       checklist_item_count=None,
                                       completed_date_time=None,
                                       conversation_thread_id=None,
                                       created_date_time=None,
                                       due_date_time=None,
                                       has_description=None,
                                       order_hint=None,
                                       percent_complete=None,
                                       plan_id=None,
                                       preview_type=None,
                                       priority=None,
                                       reference_count=None,
                                       start_date_time=None,
                                       title=None,
                                       bucket_task_board_format=None,
                                       progress_task_board_format=None,
                                       microsoft_graph_entity_id=None,
                                       checklist=None,
                                       description=None,
                                       microsoft_graph_planner_preview_type=None,
                                       references=None,
                                       id1=None,
                                       order_hints_by_assignee=None,
                                       unassigned_order_hint=None,
                                       application=None,
                                       device=None,
                                       user=None,
                                       microsoft_graph_identity_application=None,
                                       microsoft_graph_identity_device=None,
                                       microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.update_tasks(planner_bucket_id=planner_bucket_id,
                               planner_task_id=planner_task_id,
                               body=body)


def planner_planner_bucket_task_delete_assigned_to_task_board_format(client,
                                                                     planner_bucket_id,
                                                                     planner_task_id,
                                                                     if_match=None):
    return client.delete_assigned_to_task_board_format(planner_bucket_id=planner_bucket_id,
                                                       planner_task_id=planner_task_id,
                                                       if_match=if_match)


def planner_planner_bucket_task_delete_bucket_task_board_format(client,
                                                                planner_bucket_id,
                                                                planner_task_id,
                                                                if_match=None):
    return client.delete_bucket_task_board_format(planner_bucket_id=planner_bucket_id,
                                                  planner_task_id=planner_task_id,
                                                  if_match=if_match)


def planner_planner_bucket_task_delete_detail(client,
                                              planner_bucket_id,
                                              planner_task_id,
                                              if_match=None):
    return client.delete_details(planner_bucket_id=planner_bucket_id,
                                 planner_task_id=planner_task_id,
                                 if_match=if_match)


def planner_planner_bucket_task_delete_progress_task_board_format(client,
                                                                  planner_bucket_id,
                                                                  planner_task_id,
                                                                  if_match=None):
    return client.delete_progress_task_board_format(planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    if_match=if_match)


def planner_planner_bucket_task_show_assigned_to_task_board_format(client,
                                                                   planner_bucket_id,
                                                                   planner_task_id,
                                                                   select=None,
                                                                   expand=None):
    return client.get_assigned_to_task_board_format(planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    select=select,
                                                    expand=expand)


def planner_planner_bucket_task_show_bucket_task_board_format(client,
                                                              planner_bucket_id,
                                                              planner_task_id,
                                                              select=None,
                                                              expand=None):
    return client.get_bucket_task_board_format(planner_bucket_id=planner_bucket_id,
                                               planner_task_id=planner_task_id,
                                               select=select,
                                               expand=expand)


def planner_planner_bucket_task_show_detail(client,
                                            planner_bucket_id,
                                            planner_task_id,
                                            select=None,
                                            expand=None):
    return client.get_details(planner_bucket_id=planner_bucket_id,
                              planner_task_id=planner_task_id,
                              select=select,
                              expand=expand)


def planner_planner_bucket_task_show_progress_task_board_format(client,
                                                                planner_bucket_id,
                                                                planner_task_id,
                                                                select=None,
                                                                expand=None):
    return client.get_progress_task_board_format(planner_bucket_id=planner_bucket_id,
                                                 planner_task_id=planner_task_id,
                                                 select=select,
                                                 expand=expand)


def planner_planner_bucket_task_update_assigned_to_task_board_format(client,
                                                                     planner_bucket_id,
                                                                     planner_task_id,
                                                                     id_=None,
                                                                     order_hints_by_assignee=None,
                                                                     unassigned_order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hints_by_assignee'] = order_hints_by_assignee
    body['unassigned_order_hint'] = unassigned_order_hint
    return client.update_assigned_to_task_board_format(planner_bucket_id=planner_bucket_id,
                                                       planner_task_id=planner_task_id,
                                                       body=body)


def planner_planner_bucket_task_update_bucket_task_board_format(client,
                                                                planner_bucket_id,
                                                                planner_task_id,
                                                                id_=None,
                                                                order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_bucket_task_board_format(planner_bucket_id=planner_bucket_id,
                                                  planner_task_id=planner_task_id,
                                                  body=body)


def planner_planner_bucket_task_update_detail(client,
                                              planner_bucket_id,
                                              planner_task_id,
                                              id_=None,
                                              checklist=None,
                                              description=None,
                                              preview_type=None,
                                              references=None):
    body = {}
    body['id'] = id_
    body['checklist'] = checklist
    body['description'] = description
    body['preview_type'] = preview_type
    body['references'] = references
    return client.update_details(planner_bucket_id=planner_bucket_id,
                                 planner_task_id=planner_task_id,
                                 body=body)


def planner_planner_bucket_task_update_progress_task_board_format(client,
                                                                  planner_bucket_id,
                                                                  planner_task_id,
                                                                  id_=None,
                                                                  order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_progress_task_board_format(planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    body=body)


def planner_planner_plan_create_bucket(client,
                                       planner_plan_id,
                                       id_=None,
                                       name=None,
                                       order_hint=None,
                                       plan_id=None,
                                       tasks=None):
    body = {}
    body['id'] = id_
    body['name'] = name
    body['order_hint'] = order_hint
    body['plan_id'] = plan_id
    body['tasks'] = tasks
    return client.create_buckets(planner_plan_id=planner_plan_id,
                                 body=body)


def planner_planner_plan_create_task(client,
                                     planner_plan_id,
                                     id_=None,
                                     active_checklist_item_count=None,
                                     applied_categories=None,
                                     assignee_priority=None,
                                     assignments=None,
                                     bucket_id=None,
                                     checklist_item_count=None,
                                     completed_date_time=None,
                                     conversation_thread_id=None,
                                     created_date_time=None,
                                     due_date_time=None,
                                     has_description=None,
                                     order_hint=None,
                                     percent_complete=None,
                                     plan_id=None,
                                     preview_type=None,
                                     priority=None,
                                     reference_count=None,
                                     start_date_time=None,
                                     title=None,
                                     bucket_task_board_format=None,
                                     progress_task_board_format=None,
                                     microsoft_graph_entity_id=None,
                                     checklist=None,
                                     description=None,
                                     microsoft_graph_planner_preview_type=None,
                                     references=None,
                                     id1=None,
                                     order_hints_by_assignee=None,
                                     unassigned_order_hint=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.create_tasks(planner_plan_id=planner_plan_id,
                               body=body)


def planner_planner_plan_delete_bucket(client,
                                       planner_plan_id,
                                       planner_bucket_id,
                                       if_match=None):
    return client.delete_buckets(planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 if_match=if_match)


def planner_planner_plan_delete_detail(client,
                                       planner_plan_id,
                                       if_match=None):
    return client.delete_details(planner_plan_id=planner_plan_id,
                                 if_match=if_match)


def planner_planner_plan_delete_task(client,
                                     planner_plan_id,
                                     planner_task_id,
                                     if_match=None):
    return client.delete_tasks(planner_plan_id=planner_plan_id,
                               planner_task_id=planner_task_id,
                               if_match=if_match)


def planner_planner_plan_list_bucket(client,
                                     planner_plan_id,
                                     orderby=None,
                                     select=None,
                                     expand=None):
    return client.list_buckets(planner_plan_id=planner_plan_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def planner_planner_plan_list_task(client,
                                   planner_plan_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_tasks(planner_plan_id=planner_plan_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def planner_planner_plan_show_bucket(client,
                                     planner_plan_id,
                                     planner_bucket_id,
                                     select=None,
                                     expand=None):
    return client.get_buckets(planner_plan_id=planner_plan_id,
                              planner_bucket_id=planner_bucket_id,
                              select=select,
                              expand=expand)


def planner_planner_plan_show_detail(client,
                                     planner_plan_id,
                                     select=None,
                                     expand=None):
    return client.get_details(planner_plan_id=planner_plan_id,
                              select=select,
                              expand=expand)


def planner_planner_plan_show_task(client,
                                   planner_plan_id,
                                   planner_task_id,
                                   select=None,
                                   expand=None):
    return client.get_tasks(planner_plan_id=planner_plan_id,
                            planner_task_id=planner_task_id,
                            select=select,
                            expand=expand)


def planner_planner_plan_update_bucket(client,
                                       planner_plan_id,
                                       planner_bucket_id,
                                       id_=None,
                                       name=None,
                                       order_hint=None,
                                       plan_id=None,
                                       tasks=None):
    body = {}
    body['id'] = id_
    body['name'] = name
    body['order_hint'] = order_hint
    body['plan_id'] = plan_id
    body['tasks'] = tasks
    return client.update_buckets(planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 body=body)


def planner_planner_plan_update_detail(client,
                                       planner_plan_id,
                                       id_=None,
                                       category_descriptions=None,
                                       context_details=None,
                                       shared_with=None):
    body = {}
    body['id'] = id_
    body['category_descriptions'] = category_descriptions
    body['context_details'] = context_details
    body['shared_with'] = shared_with
    return client.update_details(planner_plan_id=planner_plan_id,
                                 body=body)


def planner_planner_plan_update_task(client,
                                     planner_plan_id,
                                     planner_task_id,
                                     id_=None,
                                     active_checklist_item_count=None,
                                     applied_categories=None,
                                     assignee_priority=None,
                                     assignments=None,
                                     bucket_id=None,
                                     checklist_item_count=None,
                                     completed_date_time=None,
                                     conversation_thread_id=None,
                                     created_date_time=None,
                                     due_date_time=None,
                                     has_description=None,
                                     order_hint=None,
                                     percent_complete=None,
                                     plan_id=None,
                                     preview_type=None,
                                     priority=None,
                                     reference_count=None,
                                     start_date_time=None,
                                     title=None,
                                     bucket_task_board_format=None,
                                     progress_task_board_format=None,
                                     microsoft_graph_entity_id=None,
                                     checklist=None,
                                     description=None,
                                     microsoft_graph_planner_preview_type=None,
                                     references=None,
                                     id1=None,
                                     order_hints_by_assignee=None,
                                     unassigned_order_hint=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.update_tasks(planner_plan_id=planner_plan_id,
                               planner_task_id=planner_task_id,
                               body=body)


def planner_planner_plan_bucket_create_task(client,
                                            planner_plan_id,
                                            planner_bucket_id,
                                            id_=None,
                                            active_checklist_item_count=None,
                                            applied_categories=None,
                                            assignee_priority=None,
                                            assignments=None,
                                            bucket_id=None,
                                            checklist_item_count=None,
                                            completed_date_time=None,
                                            conversation_thread_id=None,
                                            created_date_time=None,
                                            due_date_time=None,
                                            has_description=None,
                                            order_hint=None,
                                            percent_complete=None,
                                            plan_id=None,
                                            preview_type=None,
                                            priority=None,
                                            reference_count=None,
                                            start_date_time=None,
                                            title=None,
                                            bucket_task_board_format=None,
                                            progress_task_board_format=None,
                                            microsoft_graph_entity_id=None,
                                            checklist=None,
                                            description=None,
                                            microsoft_graph_planner_preview_type=None,
                                            references=None,
                                            id1=None,
                                            order_hints_by_assignee=None,
                                            unassigned_order_hint=None,
                                            application=None,
                                            device=None,
                                            user=None,
                                            microsoft_graph_identity_application=None,
                                            microsoft_graph_identity_device=None,
                                            microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.create_tasks(planner_plan_id=planner_plan_id,
                               planner_bucket_id=planner_bucket_id,
                               body=body)


def planner_planner_plan_bucket_delete_task(client,
                                            planner_plan_id,
                                            planner_bucket_id,
                                            planner_task_id,
                                            if_match=None):
    return client.delete_tasks(planner_plan_id=planner_plan_id,
                               planner_bucket_id=planner_bucket_id,
                               planner_task_id=planner_task_id,
                               if_match=if_match)


def planner_planner_plan_bucket_list_task(client,
                                          planner_plan_id,
                                          planner_bucket_id,
                                          orderby=None,
                                          select=None,
                                          expand=None):
    return client.list_tasks(planner_plan_id=planner_plan_id,
                             planner_bucket_id=planner_bucket_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def planner_planner_plan_bucket_show_task(client,
                                          planner_plan_id,
                                          planner_bucket_id,
                                          planner_task_id,
                                          select=None,
                                          expand=None):
    return client.get_tasks(planner_plan_id=planner_plan_id,
                            planner_bucket_id=planner_bucket_id,
                            planner_task_id=planner_task_id,
                            select=select,
                            expand=expand)


def planner_planner_plan_bucket_update_task(client,
                                            planner_plan_id,
                                            planner_bucket_id,
                                            planner_task_id,
                                            id_=None,
                                            active_checklist_item_count=None,
                                            applied_categories=None,
                                            assignee_priority=None,
                                            assignments=None,
                                            bucket_id=None,
                                            checklist_item_count=None,
                                            completed_date_time=None,
                                            conversation_thread_id=None,
                                            created_date_time=None,
                                            due_date_time=None,
                                            has_description=None,
                                            order_hint=None,
                                            percent_complete=None,
                                            plan_id=None,
                                            preview_type=None,
                                            priority=None,
                                            reference_count=None,
                                            start_date_time=None,
                                            title=None,
                                            bucket_task_board_format=None,
                                            progress_task_board_format=None,
                                            microsoft_graph_entity_id=None,
                                            checklist=None,
                                            description=None,
                                            microsoft_graph_planner_preview_type=None,
                                            references=None,
                                            id1=None,
                                            order_hints_by_assignee=None,
                                            unassigned_order_hint=None,
                                            application=None,
                                            device=None,
                                            user=None,
                                            microsoft_graph_identity_application=None,
                                            microsoft_graph_identity_device=None,
                                            microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.update_tasks(planner_plan_id=planner_plan_id,
                               planner_bucket_id=planner_bucket_id,
                               planner_task_id=planner_task_id,
                               body=body)


def planner_planner_plan_bucket_task_delete_assigned_to_task_board_format(client,
                                                                          planner_plan_id,
                                                                          planner_bucket_id,
                                                                          planner_task_id,
                                                                          if_match=None):
    return client.delete_assigned_to_task_board_format(planner_plan_id=planner_plan_id,
                                                       planner_bucket_id=planner_bucket_id,
                                                       planner_task_id=planner_task_id,
                                                       if_match=if_match)


def planner_planner_plan_bucket_task_delete_bucket_task_board_format(client,
                                                                     planner_plan_id,
                                                                     planner_bucket_id,
                                                                     planner_task_id,
                                                                     if_match=None):
    return client.delete_bucket_task_board_format(planner_plan_id=planner_plan_id,
                                                  planner_bucket_id=planner_bucket_id,
                                                  planner_task_id=planner_task_id,
                                                  if_match=if_match)


def planner_planner_plan_bucket_task_delete_detail(client,
                                                   planner_plan_id,
                                                   planner_bucket_id,
                                                   planner_task_id,
                                                   if_match=None):
    return client.delete_details(planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 planner_task_id=planner_task_id,
                                 if_match=if_match)


def planner_planner_plan_bucket_task_delete_progress_task_board_format(client,
                                                                       planner_plan_id,
                                                                       planner_bucket_id,
                                                                       planner_task_id,
                                                                       if_match=None):
    return client.delete_progress_task_board_format(planner_plan_id=planner_plan_id,
                                                    planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    if_match=if_match)


def planner_planner_plan_bucket_task_show_assigned_to_task_board_format(client,
                                                                        planner_plan_id,
                                                                        planner_bucket_id,
                                                                        planner_task_id,
                                                                        select=None,
                                                                        expand=None):
    return client.get_assigned_to_task_board_format(planner_plan_id=planner_plan_id,
                                                    planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    select=select,
                                                    expand=expand)


def planner_planner_plan_bucket_task_show_bucket_task_board_format(client,
                                                                   planner_plan_id,
                                                                   planner_bucket_id,
                                                                   planner_task_id,
                                                                   select=None,
                                                                   expand=None):
    return client.get_bucket_task_board_format(planner_plan_id=planner_plan_id,
                                               planner_bucket_id=planner_bucket_id,
                                               planner_task_id=planner_task_id,
                                               select=select,
                                               expand=expand)


def planner_planner_plan_bucket_task_show_detail(client,
                                                 planner_plan_id,
                                                 planner_bucket_id,
                                                 planner_task_id,
                                                 select=None,
                                                 expand=None):
    return client.get_details(planner_plan_id=planner_plan_id,
                              planner_bucket_id=planner_bucket_id,
                              planner_task_id=planner_task_id,
                              select=select,
                              expand=expand)


def planner_planner_plan_bucket_task_show_progress_task_board_format(client,
                                                                     planner_plan_id,
                                                                     planner_bucket_id,
                                                                     planner_task_id,
                                                                     select=None,
                                                                     expand=None):
    return client.get_progress_task_board_format(planner_plan_id=planner_plan_id,
                                                 planner_bucket_id=planner_bucket_id,
                                                 planner_task_id=planner_task_id,
                                                 select=select,
                                                 expand=expand)


def planner_planner_plan_bucket_task_update_assigned_to_task_board_format(client,
                                                                          planner_plan_id,
                                                                          planner_bucket_id,
                                                                          planner_task_id,
                                                                          id_=None,
                                                                          order_hints_by_assignee=None,
                                                                          unassigned_order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hints_by_assignee'] = order_hints_by_assignee
    body['unassigned_order_hint'] = unassigned_order_hint
    return client.update_assigned_to_task_board_format(planner_plan_id=planner_plan_id,
                                                       planner_bucket_id=planner_bucket_id,
                                                       planner_task_id=planner_task_id,
                                                       body=body)


def planner_planner_plan_bucket_task_update_bucket_task_board_format(client,
                                                                     planner_plan_id,
                                                                     planner_bucket_id,
                                                                     planner_task_id,
                                                                     id_=None,
                                                                     order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_bucket_task_board_format(planner_plan_id=planner_plan_id,
                                                  planner_bucket_id=planner_bucket_id,
                                                  planner_task_id=planner_task_id,
                                                  body=body)


def planner_planner_plan_bucket_task_update_detail(client,
                                                   planner_plan_id,
                                                   planner_bucket_id,
                                                   planner_task_id,
                                                   id_=None,
                                                   checklist=None,
                                                   description=None,
                                                   preview_type=None,
                                                   references=None):
    body = {}
    body['id'] = id_
    body['checklist'] = checklist
    body['description'] = description
    body['preview_type'] = preview_type
    body['references'] = references
    return client.update_details(planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 planner_task_id=planner_task_id,
                                 body=body)


def planner_planner_plan_bucket_task_update_progress_task_board_format(client,
                                                                       planner_plan_id,
                                                                       planner_bucket_id,
                                                                       planner_task_id,
                                                                       id_=None,
                                                                       order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_progress_task_board_format(planner_plan_id=planner_plan_id,
                                                    planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    body=body)


def planner_planner_plan_task_delete_assigned_to_task_board_format(client,
                                                                   planner_plan_id,
                                                                   planner_task_id,
                                                                   if_match=None):
    return client.delete_assigned_to_task_board_format(planner_plan_id=planner_plan_id,
                                                       planner_task_id=planner_task_id,
                                                       if_match=if_match)


def planner_planner_plan_task_delete_bucket_task_board_format(client,
                                                              planner_plan_id,
                                                              planner_task_id,
                                                              if_match=None):
    return client.delete_bucket_task_board_format(planner_plan_id=planner_plan_id,
                                                  planner_task_id=planner_task_id,
                                                  if_match=if_match)


def planner_planner_plan_task_delete_detail(client,
                                            planner_plan_id,
                                            planner_task_id,
                                            if_match=None):
    return client.delete_details(planner_plan_id=planner_plan_id,
                                 planner_task_id=planner_task_id,
                                 if_match=if_match)


def planner_planner_plan_task_delete_progress_task_board_format(client,
                                                                planner_plan_id,
                                                                planner_task_id,
                                                                if_match=None):
    return client.delete_progress_task_board_format(planner_plan_id=planner_plan_id,
                                                    planner_task_id=planner_task_id,
                                                    if_match=if_match)


def planner_planner_plan_task_show_assigned_to_task_board_format(client,
                                                                 planner_plan_id,
                                                                 planner_task_id,
                                                                 select=None,
                                                                 expand=None):
    return client.get_assigned_to_task_board_format(planner_plan_id=planner_plan_id,
                                                    planner_task_id=planner_task_id,
                                                    select=select,
                                                    expand=expand)


def planner_planner_plan_task_show_bucket_task_board_format(client,
                                                            planner_plan_id,
                                                            planner_task_id,
                                                            select=None,
                                                            expand=None):
    return client.get_bucket_task_board_format(planner_plan_id=planner_plan_id,
                                               planner_task_id=planner_task_id,
                                               select=select,
                                               expand=expand)


def planner_planner_plan_task_show_detail(client,
                                          planner_plan_id,
                                          planner_task_id,
                                          select=None,
                                          expand=None):
    return client.get_details(planner_plan_id=planner_plan_id,
                              planner_task_id=planner_task_id,
                              select=select,
                              expand=expand)


def planner_planner_plan_task_show_progress_task_board_format(client,
                                                              planner_plan_id,
                                                              planner_task_id,
                                                              select=None,
                                                              expand=None):
    return client.get_progress_task_board_format(planner_plan_id=planner_plan_id,
                                                 planner_task_id=planner_task_id,
                                                 select=select,
                                                 expand=expand)


def planner_planner_plan_task_update_assigned_to_task_board_format(client,
                                                                   planner_plan_id,
                                                                   planner_task_id,
                                                                   id_=None,
                                                                   order_hints_by_assignee=None,
                                                                   unassigned_order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hints_by_assignee'] = order_hints_by_assignee
    body['unassigned_order_hint'] = unassigned_order_hint
    return client.update_assigned_to_task_board_format(planner_plan_id=planner_plan_id,
                                                       planner_task_id=planner_task_id,
                                                       body=body)


def planner_planner_plan_task_update_bucket_task_board_format(client,
                                                              planner_plan_id,
                                                              planner_task_id,
                                                              id_=None,
                                                              order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_bucket_task_board_format(planner_plan_id=planner_plan_id,
                                                  planner_task_id=planner_task_id,
                                                  body=body)


def planner_planner_plan_task_update_detail(client,
                                            planner_plan_id,
                                            planner_task_id,
                                            id_=None,
                                            checklist=None,
                                            description=None,
                                            preview_type=None,
                                            references=None):
    body = {}
    body['id'] = id_
    body['checklist'] = checklist
    body['description'] = description
    body['preview_type'] = preview_type
    body['references'] = references
    return client.update_details(planner_plan_id=planner_plan_id,
                                 planner_task_id=planner_task_id,
                                 body=body)


def planner_planner_plan_task_update_progress_task_board_format(client,
                                                                planner_plan_id,
                                                                planner_task_id,
                                                                id_=None,
                                                                order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_progress_task_board_format(planner_plan_id=planner_plan_id,
                                                    planner_task_id=planner_task_id,
                                                    body=body)


def planner_planner_task_delete_assigned_to_task_board_format(client,
                                                              planner_task_id,
                                                              if_match=None):
    return client.delete_assigned_to_task_board_format(planner_task_id=planner_task_id,
                                                       if_match=if_match)


def planner_planner_task_delete_bucket_task_board_format(client,
                                                         planner_task_id,
                                                         if_match=None):
    return client.delete_bucket_task_board_format(planner_task_id=planner_task_id,
                                                  if_match=if_match)


def planner_planner_task_delete_detail(client,
                                       planner_task_id,
                                       if_match=None):
    return client.delete_details(planner_task_id=planner_task_id,
                                 if_match=if_match)


def planner_planner_task_delete_progress_task_board_format(client,
                                                           planner_task_id,
                                                           if_match=None):
    return client.delete_progress_task_board_format(planner_task_id=planner_task_id,
                                                    if_match=if_match)


def planner_planner_task_show_assigned_to_task_board_format(client,
                                                            planner_task_id,
                                                            select=None,
                                                            expand=None):
    return client.get_assigned_to_task_board_format(planner_task_id=planner_task_id,
                                                    select=select,
                                                    expand=expand)


def planner_planner_task_show_bucket_task_board_format(client,
                                                       planner_task_id,
                                                       select=None,
                                                       expand=None):
    return client.get_bucket_task_board_format(planner_task_id=planner_task_id,
                                               select=select,
                                               expand=expand)


def planner_planner_task_show_detail(client,
                                     planner_task_id,
                                     select=None,
                                     expand=None):
    return client.get_details(planner_task_id=planner_task_id,
                              select=select,
                              expand=expand)


def planner_planner_task_show_progress_task_board_format(client,
                                                         planner_task_id,
                                                         select=None,
                                                         expand=None):
    return client.get_progress_task_board_format(planner_task_id=planner_task_id,
                                                 select=select,
                                                 expand=expand)


def planner_planner_task_update_assigned_to_task_board_format(client,
                                                              planner_task_id,
                                                              id_=None,
                                                              order_hints_by_assignee=None,
                                                              unassigned_order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hints_by_assignee'] = order_hints_by_assignee
    body['unassigned_order_hint'] = unassigned_order_hint
    return client.update_assigned_to_task_board_format(planner_task_id=planner_task_id,
                                                       body=body)


def planner_planner_task_update_bucket_task_board_format(client,
                                                         planner_task_id,
                                                         id_=None,
                                                         order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_bucket_task_board_format(planner_task_id=planner_task_id,
                                                  body=body)


def planner_planner_task_update_detail(client,
                                       planner_task_id,
                                       id_=None,
                                       checklist=None,
                                       description=None,
                                       preview_type=None,
                                       references=None):
    body = {}
    body['id'] = id_
    body['checklist'] = checklist
    body['description'] = description
    body['preview_type'] = preview_type
    body['references'] = references
    return client.update_details(planner_task_id=planner_task_id,
                                 body=body)


def planner_planner_task_update_progress_task_board_format(client,
                                                           planner_task_id,
                                                           id_=None,
                                                           order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_progress_task_board_format(planner_task_id=planner_task_id,
                                                    body=body)


def planner_user_delete_planner(client,
                                user_id,
                                if_match=None):
    return client.delete_planner(user_id=user_id,
                                 if_match=if_match)


def planner_user_show_planner(client,
                              user_id,
                              select=None,
                              expand=None):
    return client.get_planner(user_id=user_id,
                              select=select,
                              expand=expand)


def planner_user_update_planner(client,
                                user_id,
                                id_=None,
                                favorite_plan_references=None,
                                recent_plan_references=None,
                                all_=None,
                                favorite_plans=None,
                                plans=None,
                                recent_plans=None,
                                tasks=None):
    body = {}
    body['id'] = id_
    body['favorite_plan_references'] = favorite_plan_references
    body['recent_plan_references'] = recent_plan_references
    body['all'] = all_
    body['favorite_plans'] = favorite_plans
    body['plans'] = plans
    body['recent_plans'] = recent_plans
    body['tasks'] = tasks
    return client.update_planner(user_id=user_id,
                                 body=body)


def planner_user_planner_create_all(client,
                                    user_id,
                                    id_=None):
    body = {}
    body['id'] = id_
    return client.create_all(user_id=user_id,
                             body=body)


def planner_user_planner_create_plan(client,
                                     user_id,
                                     id_=None,
                                     contexts=None,
                                     created_date_time=None,
                                     owner=None,
                                     title=None,
                                     buckets=None,
                                     tasks=None,
                                     microsoft_graph_entity_id=None,
                                     category_descriptions=None,
                                     context_details=None,
                                     shared_with=None,
                                     application=None,
                                     device=None,
                                     user=None):
    body = {}
    body['id'] = id_
    body['contexts'] = contexts
    body['created_date_time'] = created_date_time
    body['owner'] = owner
    body['title'] = title
    body['buckets'] = buckets
    body['tasks'] = tasks
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['category_descriptions'] = category_descriptions
    body['details']['context_details'] = context_details
    body['details']['shared_with'] = shared_with
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    return client.create_plans(user_id=user_id,
                               body=body)


def planner_user_planner_create_ref_favorite_plan(client,
                                                  user_id,
                                                  body):
    return client.create_ref_favorite_plans(user_id=user_id,
                                            body=body)


def planner_user_planner_create_ref_recent_plan(client,
                                                user_id,
                                                body):
    return client.create_ref_recent_plans(user_id=user_id,
                                          body=body)


def planner_user_planner_create_task(client,
                                     user_id,
                                     id_=None,
                                     active_checklist_item_count=None,
                                     applied_categories=None,
                                     assignee_priority=None,
                                     assignments=None,
                                     bucket_id=None,
                                     checklist_item_count=None,
                                     completed_date_time=None,
                                     conversation_thread_id=None,
                                     created_date_time=None,
                                     due_date_time=None,
                                     has_description=None,
                                     order_hint=None,
                                     percent_complete=None,
                                     plan_id=None,
                                     preview_type=None,
                                     priority=None,
                                     reference_count=None,
                                     start_date_time=None,
                                     title=None,
                                     bucket_task_board_format=None,
                                     progress_task_board_format=None,
                                     microsoft_graph_entity_id=None,
                                     checklist=None,
                                     description=None,
                                     microsoft_graph_planner_preview_type=None,
                                     references=None,
                                     id1=None,
                                     order_hints_by_assignee=None,
                                     unassigned_order_hint=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.create_tasks(user_id=user_id,
                               body=body)


def planner_user_planner_delete_all(client,
                                    user_id,
                                    planner_delta_id,
                                    if_match=None):
    return client.delete_all(user_id=user_id,
                             planner_delta_id=planner_delta_id,
                             if_match=if_match)


def planner_user_planner_delete_plan(client,
                                     user_id,
                                     planner_plan_id,
                                     if_match=None):
    return client.delete_plans(user_id=user_id,
                               planner_plan_id=planner_plan_id,
                               if_match=if_match)


def planner_user_planner_delete_task(client,
                                     user_id,
                                     planner_task_id,
                                     if_match=None):
    return client.delete_tasks(user_id=user_id,
                               planner_task_id=planner_task_id,
                               if_match=if_match)


def planner_user_planner_list_all(client,
                                  user_id,
                                  orderby=None,
                                  select=None,
                                  expand=None):
    return client.list_all(user_id=user_id,
                           orderby=orderby,
                           select=select,
                           expand=expand)


def planner_user_planner_list_favorite_plan(client,
                                            user_id,
                                            orderby=None,
                                            select=None,
                                            expand=None):
    return client.list_favorite_plans(user_id=user_id,
                                      orderby=orderby,
                                      select=select,
                                      expand=expand)


def planner_user_planner_list_plan(client,
                                   user_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_plans(user_id=user_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def planner_user_planner_list_recent_plan(client,
                                          user_id,
                                          orderby=None,
                                          select=None,
                                          expand=None):
    return client.list_recent_plans(user_id=user_id,
                                    orderby=orderby,
                                    select=select,
                                    expand=expand)


def planner_user_planner_list_ref_favorite_plan(client,
                                                user_id,
                                                orderby=None):
    return client.list_ref_favorite_plans(user_id=user_id,
                                          orderby=orderby)


def planner_user_planner_list_ref_recent_plan(client,
                                              user_id,
                                              orderby=None):
    return client.list_ref_recent_plans(user_id=user_id,
                                        orderby=orderby)


def planner_user_planner_list_task(client,
                                   user_id,
                                   orderby=None,
                                   select=None,
                                   expand=None):
    return client.list_tasks(user_id=user_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def planner_user_planner_show_all(client,
                                  user_id,
                                  planner_delta_id,
                                  select=None,
                                  expand=None):
    return client.get_all(user_id=user_id,
                          planner_delta_id=planner_delta_id,
                          select=select,
                          expand=expand)


def planner_user_planner_show_plan(client,
                                   user_id,
                                   planner_plan_id,
                                   select=None,
                                   expand=None):
    return client.get_plans(user_id=user_id,
                            planner_plan_id=planner_plan_id,
                            select=select,
                            expand=expand)


def planner_user_planner_show_task(client,
                                   user_id,
                                   planner_task_id,
                                   select=None,
                                   expand=None):
    return client.get_tasks(user_id=user_id,
                            planner_task_id=planner_task_id,
                            select=select,
                            expand=expand)


def planner_user_planner_update_all(client,
                                    user_id,
                                    planner_delta_id,
                                    id_=None):
    body = {}
    body['id'] = id_
    return client.update_all(user_id=user_id,
                             planner_delta_id=planner_delta_id,
                             body=body)


def planner_user_planner_update_plan(client,
                                     user_id,
                                     planner_plan_id,
                                     id_=None,
                                     contexts=None,
                                     created_date_time=None,
                                     owner=None,
                                     title=None,
                                     buckets=None,
                                     tasks=None,
                                     microsoft_graph_entity_id=None,
                                     category_descriptions=None,
                                     context_details=None,
                                     shared_with=None,
                                     application=None,
                                     device=None,
                                     user=None):
    body = {}
    body['id'] = id_
    body['contexts'] = contexts
    body['created_date_time'] = created_date_time
    body['owner'] = owner
    body['title'] = title
    body['buckets'] = buckets
    body['tasks'] = tasks
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['category_descriptions'] = category_descriptions
    body['details']['context_details'] = context_details
    body['details']['shared_with'] = shared_with
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    return client.update_plans(user_id=user_id,
                               planner_plan_id=planner_plan_id,
                               body=body)


def planner_user_planner_update_task(client,
                                     user_id,
                                     planner_task_id,
                                     id_=None,
                                     active_checklist_item_count=None,
                                     applied_categories=None,
                                     assignee_priority=None,
                                     assignments=None,
                                     bucket_id=None,
                                     checklist_item_count=None,
                                     completed_date_time=None,
                                     conversation_thread_id=None,
                                     created_date_time=None,
                                     due_date_time=None,
                                     has_description=None,
                                     order_hint=None,
                                     percent_complete=None,
                                     plan_id=None,
                                     preview_type=None,
                                     priority=None,
                                     reference_count=None,
                                     start_date_time=None,
                                     title=None,
                                     bucket_task_board_format=None,
                                     progress_task_board_format=None,
                                     microsoft_graph_entity_id=None,
                                     checklist=None,
                                     description=None,
                                     microsoft_graph_planner_preview_type=None,
                                     references=None,
                                     id1=None,
                                     order_hints_by_assignee=None,
                                     unassigned_order_hint=None,
                                     application=None,
                                     device=None,
                                     user=None,
                                     microsoft_graph_identity_application=None,
                                     microsoft_graph_identity_device=None,
                                     microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.update_tasks(user_id=user_id,
                               planner_task_id=planner_task_id,
                               body=body)


def planner_user_planner_plan_create_bucket(client,
                                            user_id,
                                            planner_plan_id,
                                            id_=None,
                                            name=None,
                                            order_hint=None,
                                            plan_id=None,
                                            tasks=None):
    body = {}
    body['id'] = id_
    body['name'] = name
    body['order_hint'] = order_hint
    body['plan_id'] = plan_id
    body['tasks'] = tasks
    return client.create_buckets(user_id=user_id,
                                 planner_plan_id=planner_plan_id,
                                 body=body)


def planner_user_planner_plan_create_task(client,
                                          user_id,
                                          planner_plan_id,
                                          id_=None,
                                          active_checklist_item_count=None,
                                          applied_categories=None,
                                          assignee_priority=None,
                                          assignments=None,
                                          bucket_id=None,
                                          checklist_item_count=None,
                                          completed_date_time=None,
                                          conversation_thread_id=None,
                                          created_date_time=None,
                                          due_date_time=None,
                                          has_description=None,
                                          order_hint=None,
                                          percent_complete=None,
                                          plan_id=None,
                                          preview_type=None,
                                          priority=None,
                                          reference_count=None,
                                          start_date_time=None,
                                          title=None,
                                          bucket_task_board_format=None,
                                          progress_task_board_format=None,
                                          microsoft_graph_entity_id=None,
                                          checklist=None,
                                          description=None,
                                          microsoft_graph_planner_preview_type=None,
                                          references=None,
                                          id1=None,
                                          order_hints_by_assignee=None,
                                          unassigned_order_hint=None,
                                          application=None,
                                          device=None,
                                          user=None,
                                          microsoft_graph_identity_application=None,
                                          microsoft_graph_identity_device=None,
                                          microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.create_tasks(user_id=user_id,
                               planner_plan_id=planner_plan_id,
                               body=body)


def planner_user_planner_plan_delete_bucket(client,
                                            user_id,
                                            planner_plan_id,
                                            planner_bucket_id,
                                            if_match=None):
    return client.delete_buckets(user_id=user_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 if_match=if_match)


def planner_user_planner_plan_delete_detail(client,
                                            user_id,
                                            planner_plan_id,
                                            if_match=None):
    return client.delete_details(user_id=user_id,
                                 planner_plan_id=planner_plan_id,
                                 if_match=if_match)


def planner_user_planner_plan_delete_task(client,
                                          user_id,
                                          planner_plan_id,
                                          planner_task_id,
                                          if_match=None):
    return client.delete_tasks(user_id=user_id,
                               planner_plan_id=planner_plan_id,
                               planner_task_id=planner_task_id,
                               if_match=if_match)


def planner_user_planner_plan_list_bucket(client,
                                          user_id,
                                          planner_plan_id,
                                          orderby=None,
                                          select=None,
                                          expand=None):
    return client.list_buckets(user_id=user_id,
                               planner_plan_id=planner_plan_id,
                               orderby=orderby,
                               select=select,
                               expand=expand)


def planner_user_planner_plan_list_task(client,
                                        user_id,
                                        planner_plan_id,
                                        orderby=None,
                                        select=None,
                                        expand=None):
    return client.list_tasks(user_id=user_id,
                             planner_plan_id=planner_plan_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def planner_user_planner_plan_show_bucket(client,
                                          user_id,
                                          planner_plan_id,
                                          planner_bucket_id,
                                          select=None,
                                          expand=None):
    return client.get_buckets(user_id=user_id,
                              planner_plan_id=planner_plan_id,
                              planner_bucket_id=planner_bucket_id,
                              select=select,
                              expand=expand)


def planner_user_planner_plan_show_detail(client,
                                          user_id,
                                          planner_plan_id,
                                          select=None,
                                          expand=None):
    return client.get_details(user_id=user_id,
                              planner_plan_id=planner_plan_id,
                              select=select,
                              expand=expand)


def planner_user_planner_plan_show_task(client,
                                        user_id,
                                        planner_plan_id,
                                        planner_task_id,
                                        select=None,
                                        expand=None):
    return client.get_tasks(user_id=user_id,
                            planner_plan_id=planner_plan_id,
                            planner_task_id=planner_task_id,
                            select=select,
                            expand=expand)


def planner_user_planner_plan_update_bucket(client,
                                            user_id,
                                            planner_plan_id,
                                            planner_bucket_id,
                                            id_=None,
                                            name=None,
                                            order_hint=None,
                                            plan_id=None,
                                            tasks=None):
    body = {}
    body['id'] = id_
    body['name'] = name
    body['order_hint'] = order_hint
    body['plan_id'] = plan_id
    body['tasks'] = tasks
    return client.update_buckets(user_id=user_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 body=body)


def planner_user_planner_plan_update_detail(client,
                                            user_id,
                                            planner_plan_id,
                                            id_=None,
                                            category_descriptions=None,
                                            context_details=None,
                                            shared_with=None):
    body = {}
    body['id'] = id_
    body['category_descriptions'] = category_descriptions
    body['context_details'] = context_details
    body['shared_with'] = shared_with
    return client.update_details(user_id=user_id,
                                 planner_plan_id=planner_plan_id,
                                 body=body)


def planner_user_planner_plan_update_task(client,
                                          user_id,
                                          planner_plan_id,
                                          planner_task_id,
                                          id_=None,
                                          active_checklist_item_count=None,
                                          applied_categories=None,
                                          assignee_priority=None,
                                          assignments=None,
                                          bucket_id=None,
                                          checklist_item_count=None,
                                          completed_date_time=None,
                                          conversation_thread_id=None,
                                          created_date_time=None,
                                          due_date_time=None,
                                          has_description=None,
                                          order_hint=None,
                                          percent_complete=None,
                                          plan_id=None,
                                          preview_type=None,
                                          priority=None,
                                          reference_count=None,
                                          start_date_time=None,
                                          title=None,
                                          bucket_task_board_format=None,
                                          progress_task_board_format=None,
                                          microsoft_graph_entity_id=None,
                                          checklist=None,
                                          description=None,
                                          microsoft_graph_planner_preview_type=None,
                                          references=None,
                                          id1=None,
                                          order_hints_by_assignee=None,
                                          unassigned_order_hint=None,
                                          application=None,
                                          device=None,
                                          user=None,
                                          microsoft_graph_identity_application=None,
                                          microsoft_graph_identity_device=None,
                                          microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.update_tasks(user_id=user_id,
                               planner_plan_id=planner_plan_id,
                               planner_task_id=planner_task_id,
                               body=body)


def planner_user_planner_plan_bucket_create_task(client,
                                                 user_id,
                                                 planner_plan_id,
                                                 planner_bucket_id,
                                                 id_=None,
                                                 active_checklist_item_count=None,
                                                 applied_categories=None,
                                                 assignee_priority=None,
                                                 assignments=None,
                                                 bucket_id=None,
                                                 checklist_item_count=None,
                                                 completed_date_time=None,
                                                 conversation_thread_id=None,
                                                 created_date_time=None,
                                                 due_date_time=None,
                                                 has_description=None,
                                                 order_hint=None,
                                                 percent_complete=None,
                                                 plan_id=None,
                                                 preview_type=None,
                                                 priority=None,
                                                 reference_count=None,
                                                 start_date_time=None,
                                                 title=None,
                                                 bucket_task_board_format=None,
                                                 progress_task_board_format=None,
                                                 microsoft_graph_entity_id=None,
                                                 checklist=None,
                                                 description=None,
                                                 microsoft_graph_planner_preview_type=None,
                                                 references=None,
                                                 id1=None,
                                                 order_hints_by_assignee=None,
                                                 unassigned_order_hint=None,
                                                 application=None,
                                                 device=None,
                                                 user=None,
                                                 microsoft_graph_identity_application=None,
                                                 microsoft_graph_identity_device=None,
                                                 microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.create_tasks(user_id=user_id,
                               planner_plan_id=planner_plan_id,
                               planner_bucket_id=planner_bucket_id,
                               body=body)


def planner_user_planner_plan_bucket_delete_task(client,
                                                 user_id,
                                                 planner_plan_id,
                                                 planner_bucket_id,
                                                 planner_task_id,
                                                 if_match=None):
    return client.delete_tasks(user_id=user_id,
                               planner_plan_id=planner_plan_id,
                               planner_bucket_id=planner_bucket_id,
                               planner_task_id=planner_task_id,
                               if_match=if_match)


def planner_user_planner_plan_bucket_list_task(client,
                                               user_id,
                                               planner_plan_id,
                                               planner_bucket_id,
                                               orderby=None,
                                               select=None,
                                               expand=None):
    return client.list_tasks(user_id=user_id,
                             planner_plan_id=planner_plan_id,
                             planner_bucket_id=planner_bucket_id,
                             orderby=orderby,
                             select=select,
                             expand=expand)


def planner_user_planner_plan_bucket_show_task(client,
                                               user_id,
                                               planner_plan_id,
                                               planner_bucket_id,
                                               planner_task_id,
                                               select=None,
                                               expand=None):
    return client.get_tasks(user_id=user_id,
                            planner_plan_id=planner_plan_id,
                            planner_bucket_id=planner_bucket_id,
                            planner_task_id=planner_task_id,
                            select=select,
                            expand=expand)


def planner_user_planner_plan_bucket_update_task(client,
                                                 user_id,
                                                 planner_plan_id,
                                                 planner_bucket_id,
                                                 planner_task_id,
                                                 id_=None,
                                                 active_checklist_item_count=None,
                                                 applied_categories=None,
                                                 assignee_priority=None,
                                                 assignments=None,
                                                 bucket_id=None,
                                                 checklist_item_count=None,
                                                 completed_date_time=None,
                                                 conversation_thread_id=None,
                                                 created_date_time=None,
                                                 due_date_time=None,
                                                 has_description=None,
                                                 order_hint=None,
                                                 percent_complete=None,
                                                 plan_id=None,
                                                 preview_type=None,
                                                 priority=None,
                                                 reference_count=None,
                                                 start_date_time=None,
                                                 title=None,
                                                 bucket_task_board_format=None,
                                                 progress_task_board_format=None,
                                                 microsoft_graph_entity_id=None,
                                                 checklist=None,
                                                 description=None,
                                                 microsoft_graph_planner_preview_type=None,
                                                 references=None,
                                                 id1=None,
                                                 order_hints_by_assignee=None,
                                                 unassigned_order_hint=None,
                                                 application=None,
                                                 device=None,
                                                 user=None,
                                                 microsoft_graph_identity_application=None,
                                                 microsoft_graph_identity_device=None,
                                                 microsoft_graph_identity_user=None):
    body = {}
    body['id'] = id_
    body['active_checklist_item_count'] = active_checklist_item_count
    body['applied_categories'] = applied_categories
    body['assignee_priority'] = assignee_priority
    body['assignments'] = assignments
    body['bucket_id'] = bucket_id
    body['checklist_item_count'] = checklist_item_count
    body['completed_date_time'] = completed_date_time
    body['conversation_thread_id'] = conversation_thread_id
    body['created_date_time'] = created_date_time
    body['due_date_time'] = due_date_time
    body['has_description'] = has_description
    body['order_hint'] = order_hint
    body['percent_complete'] = percent_complete
    body['plan_id'] = plan_id
    body['preview_type'] = preview_type
    body['priority'] = priority
    body['reference_count'] = reference_count
    body['start_date_time'] = start_date_time
    body['title'] = title
    body['bucket_task_board_format'] = bucket_task_board_format
    body['progress_task_board_format'] = progress_task_board_format
    body['details'] = {}
    body['details']['id'] = microsoft_graph_entity_id
    body['details']['checklist'] = checklist
    body['details']['description'] = description
    body['details']['preview_type'] = microsoft_graph_planner_preview_type
    body['details']['references'] = references
    body['assigned_to_task_board_format'] = {}
    body['assigned_to_task_board_format']['id'] = id1
    body['assigned_to_task_board_format']['order_hints_by_assignee'] = order_hints_by_assignee
    body['assigned_to_task_board_format']['unassigned_order_hint'] = unassigned_order_hint
    body['created_by'] = {}
    body['created_by']['application'] = application
    body['created_by']['device'] = device
    body['created_by']['user'] = user
    body['completed_by'] = {}
    body['completed_by']['application'] = microsoft_graph_identity_application
    body['completed_by']['device'] = microsoft_graph_identity_device
    body['completed_by']['user'] = microsoft_graph_identity_user
    return client.update_tasks(user_id=user_id,
                               planner_plan_id=planner_plan_id,
                               planner_bucket_id=planner_bucket_id,
                               planner_task_id=planner_task_id,
                               body=body)


def planner_user_planner_plan_bucket_task_delete_assigned_to_task_board_format(client,
                                                                               user_id,
                                                                               planner_plan_id,
                                                                               planner_bucket_id,
                                                                               planner_task_id,
                                                                               if_match=None):
    return client.delete_assigned_to_task_board_format(user_id=user_id,
                                                       planner_plan_id=planner_plan_id,
                                                       planner_bucket_id=planner_bucket_id,
                                                       planner_task_id=planner_task_id,
                                                       if_match=if_match)


def planner_user_planner_plan_bucket_task_delete_bucket_task_board_format(client,
                                                                          user_id,
                                                                          planner_plan_id,
                                                                          planner_bucket_id,
                                                                          planner_task_id,
                                                                          if_match=None):
    return client.delete_bucket_task_board_format(user_id=user_id,
                                                  planner_plan_id=planner_plan_id,
                                                  planner_bucket_id=planner_bucket_id,
                                                  planner_task_id=planner_task_id,
                                                  if_match=if_match)


def planner_user_planner_plan_bucket_task_delete_detail(client,
                                                        user_id,
                                                        planner_plan_id,
                                                        planner_bucket_id,
                                                        planner_task_id,
                                                        if_match=None):
    return client.delete_details(user_id=user_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 planner_task_id=planner_task_id,
                                 if_match=if_match)


def planner_user_planner_plan_bucket_task_delete_progress_task_board_format(client,
                                                                            user_id,
                                                                            planner_plan_id,
                                                                            planner_bucket_id,
                                                                            planner_task_id,
                                                                            if_match=None):
    return client.delete_progress_task_board_format(user_id=user_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    if_match=if_match)


def planner_user_planner_plan_bucket_task_show_assigned_to_task_board_format(client,
                                                                             user_id,
                                                                             planner_plan_id,
                                                                             planner_bucket_id,
                                                                             planner_task_id,
                                                                             select=None,
                                                                             expand=None):
    return client.get_assigned_to_task_board_format(user_id=user_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    select=select,
                                                    expand=expand)


def planner_user_planner_plan_bucket_task_show_bucket_task_board_format(client,
                                                                        user_id,
                                                                        planner_plan_id,
                                                                        planner_bucket_id,
                                                                        planner_task_id,
                                                                        select=None,
                                                                        expand=None):
    return client.get_bucket_task_board_format(user_id=user_id,
                                               planner_plan_id=planner_plan_id,
                                               planner_bucket_id=planner_bucket_id,
                                               planner_task_id=planner_task_id,
                                               select=select,
                                               expand=expand)


def planner_user_planner_plan_bucket_task_show_detail(client,
                                                      user_id,
                                                      planner_plan_id,
                                                      planner_bucket_id,
                                                      planner_task_id,
                                                      select=None,
                                                      expand=None):
    return client.get_details(user_id=user_id,
                              planner_plan_id=planner_plan_id,
                              planner_bucket_id=planner_bucket_id,
                              planner_task_id=planner_task_id,
                              select=select,
                              expand=expand)


def planner_user_planner_plan_bucket_task_show_progress_task_board_format(client,
                                                                          user_id,
                                                                          planner_plan_id,
                                                                          planner_bucket_id,
                                                                          planner_task_id,
                                                                          select=None,
                                                                          expand=None):
    return client.get_progress_task_board_format(user_id=user_id,
                                                 planner_plan_id=planner_plan_id,
                                                 planner_bucket_id=planner_bucket_id,
                                                 planner_task_id=planner_task_id,
                                                 select=select,
                                                 expand=expand)


def planner_user_planner_plan_bucket_task_update_assigned_to_task_board_format(client,
                                                                               user_id,
                                                                               planner_plan_id,
                                                                               planner_bucket_id,
                                                                               planner_task_id,
                                                                               id_=None,
                                                                               order_hints_by_assignee=None,
                                                                               unassigned_order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hints_by_assignee'] = order_hints_by_assignee
    body['unassigned_order_hint'] = unassigned_order_hint
    return client.update_assigned_to_task_board_format(user_id=user_id,
                                                       planner_plan_id=planner_plan_id,
                                                       planner_bucket_id=planner_bucket_id,
                                                       planner_task_id=planner_task_id,
                                                       body=body)


def planner_user_planner_plan_bucket_task_update_bucket_task_board_format(client,
                                                                          user_id,
                                                                          planner_plan_id,
                                                                          planner_bucket_id,
                                                                          planner_task_id,
                                                                          id_=None,
                                                                          order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_bucket_task_board_format(user_id=user_id,
                                                  planner_plan_id=planner_plan_id,
                                                  planner_bucket_id=planner_bucket_id,
                                                  planner_task_id=planner_task_id,
                                                  body=body)


def planner_user_planner_plan_bucket_task_update_detail(client,
                                                        user_id,
                                                        planner_plan_id,
                                                        planner_bucket_id,
                                                        planner_task_id,
                                                        id_=None,
                                                        checklist=None,
                                                        description=None,
                                                        preview_type=None,
                                                        references=None):
    body = {}
    body['id'] = id_
    body['checklist'] = checklist
    body['description'] = description
    body['preview_type'] = preview_type
    body['references'] = references
    return client.update_details(user_id=user_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_bucket_id=planner_bucket_id,
                                 planner_task_id=planner_task_id,
                                 body=body)


def planner_user_planner_plan_bucket_task_update_progress_task_board_format(client,
                                                                            user_id,
                                                                            planner_plan_id,
                                                                            planner_bucket_id,
                                                                            planner_task_id,
                                                                            id_=None,
                                                                            order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_progress_task_board_format(user_id=user_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_bucket_id=planner_bucket_id,
                                                    planner_task_id=planner_task_id,
                                                    body=body)


def planner_user_planner_plan_task_delete_assigned_to_task_board_format(client,
                                                                        user_id,
                                                                        planner_plan_id,
                                                                        planner_task_id,
                                                                        if_match=None):
    return client.delete_assigned_to_task_board_format(user_id=user_id,
                                                       planner_plan_id=planner_plan_id,
                                                       planner_task_id=planner_task_id,
                                                       if_match=if_match)


def planner_user_planner_plan_task_delete_bucket_task_board_format(client,
                                                                   user_id,
                                                                   planner_plan_id,
                                                                   planner_task_id,
                                                                   if_match=None):
    return client.delete_bucket_task_board_format(user_id=user_id,
                                                  planner_plan_id=planner_plan_id,
                                                  planner_task_id=planner_task_id,
                                                  if_match=if_match)


def planner_user_planner_plan_task_delete_detail(client,
                                                 user_id,
                                                 planner_plan_id,
                                                 planner_task_id,
                                                 if_match=None):
    return client.delete_details(user_id=user_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_task_id=planner_task_id,
                                 if_match=if_match)


def planner_user_planner_plan_task_delete_progress_task_board_format(client,
                                                                     user_id,
                                                                     planner_plan_id,
                                                                     planner_task_id,
                                                                     if_match=None):
    return client.delete_progress_task_board_format(user_id=user_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_task_id=planner_task_id,
                                                    if_match=if_match)


def planner_user_planner_plan_task_show_assigned_to_task_board_format(client,
                                                                      user_id,
                                                                      planner_plan_id,
                                                                      planner_task_id,
                                                                      select=None,
                                                                      expand=None):
    return client.get_assigned_to_task_board_format(user_id=user_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_task_id=planner_task_id,
                                                    select=select,
                                                    expand=expand)


def planner_user_planner_plan_task_show_bucket_task_board_format(client,
                                                                 user_id,
                                                                 planner_plan_id,
                                                                 planner_task_id,
                                                                 select=None,
                                                                 expand=None):
    return client.get_bucket_task_board_format(user_id=user_id,
                                               planner_plan_id=planner_plan_id,
                                               planner_task_id=planner_task_id,
                                               select=select,
                                               expand=expand)


def planner_user_planner_plan_task_show_detail(client,
                                               user_id,
                                               planner_plan_id,
                                               planner_task_id,
                                               select=None,
                                               expand=None):
    return client.get_details(user_id=user_id,
                              planner_plan_id=planner_plan_id,
                              planner_task_id=planner_task_id,
                              select=select,
                              expand=expand)


def planner_user_planner_plan_task_show_progress_task_board_format(client,
                                                                   user_id,
                                                                   planner_plan_id,
                                                                   planner_task_id,
                                                                   select=None,
                                                                   expand=None):
    return client.get_progress_task_board_format(user_id=user_id,
                                                 planner_plan_id=planner_plan_id,
                                                 planner_task_id=planner_task_id,
                                                 select=select,
                                                 expand=expand)


def planner_user_planner_plan_task_update_assigned_to_task_board_format(client,
                                                                        user_id,
                                                                        planner_plan_id,
                                                                        planner_task_id,
                                                                        id_=None,
                                                                        order_hints_by_assignee=None,
                                                                        unassigned_order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hints_by_assignee'] = order_hints_by_assignee
    body['unassigned_order_hint'] = unassigned_order_hint
    return client.update_assigned_to_task_board_format(user_id=user_id,
                                                       planner_plan_id=planner_plan_id,
                                                       planner_task_id=planner_task_id,
                                                       body=body)


def planner_user_planner_plan_task_update_bucket_task_board_format(client,
                                                                   user_id,
                                                                   planner_plan_id,
                                                                   planner_task_id,
                                                                   id_=None,
                                                                   order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_bucket_task_board_format(user_id=user_id,
                                                  planner_plan_id=planner_plan_id,
                                                  planner_task_id=planner_task_id,
                                                  body=body)


def planner_user_planner_plan_task_update_detail(client,
                                                 user_id,
                                                 planner_plan_id,
                                                 planner_task_id,
                                                 id_=None,
                                                 checklist=None,
                                                 description=None,
                                                 preview_type=None,
                                                 references=None):
    body = {}
    body['id'] = id_
    body['checklist'] = checklist
    body['description'] = description
    body['preview_type'] = preview_type
    body['references'] = references
    return client.update_details(user_id=user_id,
                                 planner_plan_id=planner_plan_id,
                                 planner_task_id=planner_task_id,
                                 body=body)


def planner_user_planner_plan_task_update_progress_task_board_format(client,
                                                                     user_id,
                                                                     planner_plan_id,
                                                                     planner_task_id,
                                                                     id_=None,
                                                                     order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_progress_task_board_format(user_id=user_id,
                                                    planner_plan_id=planner_plan_id,
                                                    planner_task_id=planner_task_id,
                                                    body=body)


def planner_user_planner_task_delete_assigned_to_task_board_format(client,
                                                                   user_id,
                                                                   planner_task_id,
                                                                   if_match=None):
    return client.delete_assigned_to_task_board_format(user_id=user_id,
                                                       planner_task_id=planner_task_id,
                                                       if_match=if_match)


def planner_user_planner_task_delete_bucket_task_board_format(client,
                                                              user_id,
                                                              planner_task_id,
                                                              if_match=None):
    return client.delete_bucket_task_board_format(user_id=user_id,
                                                  planner_task_id=planner_task_id,
                                                  if_match=if_match)


def planner_user_planner_task_delete_detail(client,
                                            user_id,
                                            planner_task_id,
                                            if_match=None):
    return client.delete_details(user_id=user_id,
                                 planner_task_id=planner_task_id,
                                 if_match=if_match)


def planner_user_planner_task_delete_progress_task_board_format(client,
                                                                user_id,
                                                                planner_task_id,
                                                                if_match=None):
    return client.delete_progress_task_board_format(user_id=user_id,
                                                    planner_task_id=planner_task_id,
                                                    if_match=if_match)


def planner_user_planner_task_show_assigned_to_task_board_format(client,
                                                                 user_id,
                                                                 planner_task_id,
                                                                 select=None,
                                                                 expand=None):
    return client.get_assigned_to_task_board_format(user_id=user_id,
                                                    planner_task_id=planner_task_id,
                                                    select=select,
                                                    expand=expand)


def planner_user_planner_task_show_bucket_task_board_format(client,
                                                            user_id,
                                                            planner_task_id,
                                                            select=None,
                                                            expand=None):
    return client.get_bucket_task_board_format(user_id=user_id,
                                               planner_task_id=planner_task_id,
                                               select=select,
                                               expand=expand)


def planner_user_planner_task_show_detail(client,
                                          user_id,
                                          planner_task_id,
                                          select=None,
                                          expand=None):
    return client.get_details(user_id=user_id,
                              planner_task_id=planner_task_id,
                              select=select,
                              expand=expand)


def planner_user_planner_task_show_progress_task_board_format(client,
                                                              user_id,
                                                              planner_task_id,
                                                              select=None,
                                                              expand=None):
    return client.get_progress_task_board_format(user_id=user_id,
                                                 planner_task_id=planner_task_id,
                                                 select=select,
                                                 expand=expand)


def planner_user_planner_task_update_assigned_to_task_board_format(client,
                                                                   user_id,
                                                                   planner_task_id,
                                                                   id_=None,
                                                                   order_hints_by_assignee=None,
                                                                   unassigned_order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hints_by_assignee'] = order_hints_by_assignee
    body['unassigned_order_hint'] = unassigned_order_hint
    return client.update_assigned_to_task_board_format(user_id=user_id,
                                                       planner_task_id=planner_task_id,
                                                       body=body)


def planner_user_planner_task_update_bucket_task_board_format(client,
                                                              user_id,
                                                              planner_task_id,
                                                              id_=None,
                                                              order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_bucket_task_board_format(user_id=user_id,
                                                  planner_task_id=planner_task_id,
                                                  body=body)


def planner_user_planner_task_update_detail(client,
                                            user_id,
                                            planner_task_id,
                                            id_=None,
                                            checklist=None,
                                            description=None,
                                            preview_type=None,
                                            references=None):
    body = {}
    body['id'] = id_
    body['checklist'] = checklist
    body['description'] = description
    body['preview_type'] = preview_type
    body['references'] = references
    return client.update_details(user_id=user_id,
                                 planner_task_id=planner_task_id,
                                 body=body)


def planner_user_planner_task_update_progress_task_board_format(client,
                                                                user_id,
                                                                planner_task_id,
                                                                id_=None,
                                                                order_hint=None):
    body = {}
    body['id'] = id_
    body['order_hint'] = order_hint
    return client.update_progress_task_board_format(user_id=user_id,
                                                    planner_task_id=planner_task_id,
                                                    body=body)
